

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 09 15:45:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1519
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1519 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0110                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  018F                     	;# 
   127  0190                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0197                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020D                     	;# 
   149  0210                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0298                     	;# 
   170  0298                     	;# 
   171  0299                     	;# 
   172  029A                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  0FE4                     	;# 
   177  0FE5                     	;# 
   178  0FE6                     	;# 
   179  0FE7                     	;# 
   180  0FE8                     	;# 
   181  0FE9                     	;# 
   182  0FEA                     	;# 
   183  0FEB                     	;# 
   184  0FED                     	;# 
   185  0FEE                     	;# 
   186  0FEF                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  008F                     	;# 
   219  0090                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0110                     	;# 
   237  0116                     	;# 
   238  0117                     	;# 
   239  011D                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  018E                     	;# 
   243  018F                     	;# 
   244  0190                     	;# 
   245  0191                     	;# 
   246  0191                     	;# 
   247  0192                     	;# 
   248  0193                     	;# 
   249  0193                     	;# 
   250  0194                     	;# 
   251  0195                     	;# 
   252  0196                     	;# 
   253  0197                     	;# 
   254  0199                     	;# 
   255  019A                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  019C                     	;# 
   262  019D                     	;# 
   263  019E                     	;# 
   264  019F                     	;# 
   265  020D                     	;# 
   266  0210                     	;# 
   267  0211                     	;# 
   268  0211                     	;# 
   269  0212                     	;# 
   270  0212                     	;# 
   271  0213                     	;# 
   272  0213                     	;# 
   273  0214                     	;# 
   274  0214                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  0291                     	;# 
   283  0291                     	;# 
   284  0292                     	;# 
   285  0293                     	;# 
   286  0298                     	;# 
   287  0298                     	;# 
   288  0299                     	;# 
   289  029A                     	;# 
   290  0394                     	;# 
   291  0395                     	;# 
   292  0396                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  0110                     	;# 
   354  0116                     	;# 
   355  0117                     	;# 
   356  011D                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  018E                     	;# 
   360  018F                     	;# 
   361  0190                     	;# 
   362  0191                     	;# 
   363  0191                     	;# 
   364  0192                     	;# 
   365  0193                     	;# 
   366  0193                     	;# 
   367  0194                     	;# 
   368  0195                     	;# 
   369  0196                     	;# 
   370  0197                     	;# 
   371  0199                     	;# 
   372  019A                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019C                     	;# 
   378  019C                     	;# 
   379  019D                     	;# 
   380  019E                     	;# 
   381  019F                     	;# 
   382  020D                     	;# 
   383  0210                     	;# 
   384  0211                     	;# 
   385  0211                     	;# 
   386  0212                     	;# 
   387  0212                     	;# 
   388  0213                     	;# 
   389  0213                     	;# 
   390  0214                     	;# 
   391  0214                     	;# 
   392  0215                     	;# 
   393  0215                     	;# 
   394  0215                     	;# 
   395  0216                     	;# 
   396  0216                     	;# 
   397  0217                     	;# 
   398  0217                     	;# 
   399  0291                     	;# 
   400  0291                     	;# 
   401  0292                     	;# 
   402  0293                     	;# 
   403  0298                     	;# 
   404  0298                     	;# 
   405  0299                     	;# 
   406  029A                     	;# 
   407  0394                     	;# 
   408  0395                     	;# 
   409  0396                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  008F                     	;# 
   453  0090                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0110                     	;# 
   471  0116                     	;# 
   472  0117                     	;# 
   473  011D                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  018E                     	;# 
   477  018F                     	;# 
   478  0190                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0194                     	;# 
   485  0195                     	;# 
   486  0196                     	;# 
   487  0197                     	;# 
   488  0199                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019F                     	;# 
   499  020D                     	;# 
   500  0210                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0216                     	;# 
   513  0216                     	;# 
   514  0217                     	;# 
   515  0217                     	;# 
   516  0291                     	;# 
   517  0291                     	;# 
   518  0292                     	;# 
   519  0293                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000D                     	;# 
   552  000E                     	;# 
   553  000F                     	;# 
   554  0010                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  008F                     	;# 
   570  0090                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0095                     	;# 
   574  0096                     	;# 
   575  0097                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  010E                     	;# 
   586  010F                     	;# 
   587  0110                     	;# 
   588  0116                     	;# 
   589  0117                     	;# 
   590  011D                     	;# 
   591  018C                     	;# 
   592  018D                     	;# 
   593  018E                     	;# 
   594  018F                     	;# 
   595  0190                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019D                     	;# 
   614  019E                     	;# 
   615  019F                     	;# 
   616  020D                     	;# 
   617  0210                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  0291                     	;# 
   634  0291                     	;# 
   635  0292                     	;# 
   636  0293                     	;# 
   637  0298                     	;# 
   638  0298                     	;# 
   639  0299                     	;# 
   640  029A                     	;# 
   641  0394                     	;# 
   642  0395                     	;# 
   643  0396                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0015                     _TMR0	set	21
   656  000B                     _INTCONbits	set	11
   657  005A                     _T0IF	set	90
   658  005D                     _T0IE	set	93
   659  008B                     _SSPIF	set	139
   660  0095                     _OPTION_REGbits	set	149
   661  008E                     _TRISCbits	set	142
   662  008F                     _TRISD	set	143
   663  008E                     _TRISC	set	142
   664  008D                     _TRISB	set	141
   665  008C                     _TRISA	set	140
   666  0099                     _OSCCONbits	set	153
   667  048B                     _SSPIE	set	1163
   668  010F                     _LATD	set	271
   669  010E                     _LATC	set	270
   670  010D                     _LATB	set	269
   671  010C                     _LATA	set	268
   672  0868                     _LATB0	set	2152
   673  0869                     _LATB1	set	2153
   674  0863                     _LATA3	set	2147
   675  0862                     _LATA2	set	2146
   676  0861                     _LATA1	set	2145
   677  0860                     _LATA0	set	2144
   678  018F                     _ANSELD	set	399
   679  018E                     _ANSELC	set	398
   680  018D                     _ANSELB	set	397
   681  018C                     _ANSELA	set	396
   682  0211                     _SSPBUF	set	529
   683  0215                     _SSPCONbits	set	533
   684  0214                     _SSPSTAT	set	532
   685  0212                     _SSPADD	set	530
   686  0217                     _SSPCON3	set	535
   687  0216                     _SSPCON2	set	534
   688  0215                     _SSPCON1	set	533
   689  10B6                     _ACKSTAT	set	4278
   690  10A0                     _BF	set	4256
   691  10A2                     _R_nW	set	4258
   692  10A5                     _D_nA	set	4261
   693  10AC                     _CKP	set	4268
   694                           
   695                           	psect	stringtext1
   696  021C                     __pstringtext1:	
   697  021C                     STR_2:	
   698  021C  3461               	retlw	97	;'a'
   699  021D  3464               	retlw	100	;'d'
   700  021E  3464               	retlw	100	;'d'
   701  021F  343A               	retlw	58	;':'
   702  0220  3420               	retlw	32	;' '
   703  0221  3420               	retlw	32	;' '
   704  0222  3464               	retlw	100	;'d'
   705  0223  3461               	retlw	97	;'a'
   706  0224  3474               	retlw	116	;'t'
   707  0225  3461               	retlw	97	;'a'
   708  0226  343A               	retlw	58	;':'
   709  0227  3420               	retlw	32	;' '
   710  0228  3420               	retlw	32	;' '
   711  0229  3449               	retlw	73	;'I'
   712  022A  3432               	retlw	50	;'2'
   713  022B  3443               	retlw	67	;'C'
   714  022C  3400               	retlw	0
   715                           
   716                           	psect	stringtext2
   717  024A                     __pstringtext2:	
   718  024A                     STR_1:	
   719  024A  3457               	retlw	87	;'W'
   720  024B  3461               	retlw	97	;'a'
   721  024C  3469               	retlw	105	;'i'
   722  024D  3474               	retlw	116	;'t'
   723  024E  3469               	retlw	105	;'i'
   724  024F  346E               	retlw	110	;'n'
   725  0250  3467               	retlw	103	;'g'
   726  0251  3420               	retlw	32	;' '
   727  0252  342E               	retlw	46	;'.'
   728  0253  342E               	retlw	46	;'.'
   729  0254  342E               	retlw	46	;'.'
   730  0255  3400               	retlw	0
   731                           
   732                           	psect	stringtext3
   733  0000                     __pstringtext3:	
   734                           
   735                           ; #config settings
   736  0000                     
   737                           	psect	cinit
   738  0023                     start_initialization:	
   739  0023                     __initialization:	
   740                           
   741                           ; Clear objects allocated to COMMON
   742  0023  01FA               	clrf	__pbssCOMMON& (0+127)
   743  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   744                           
   745                           ; Clear objects allocated to BANK0
   746  0025  0020               	movlb	0	; select bank0
   747  0026  01A8               	clrf	__pbssBANK0& (0+127)
   748  0027  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   749  0028  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   750  0029  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   751  002A  01AC               	clrf	(__pbssBANK0+4)& (0+127)
   752  002B  01AD               	clrf	(__pbssBANK0+5)& (0+127)
   753  002C                     end_of_initialization:	
   754                           ;End of C runtime variable initialization code
   755                           
   756  002C                     __end_of__initialization:	
   757  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   758  002D  0020               	movlb	0
   759  002E  3181  29C5         	ljmp	_main	;jump to C main() function
   760                           
   761                           	psect	bssCOMMON
   762  007A                     __pbssCOMMON:	
   763  007A                     _i2c_data:	
   764  007A                     	ds	1
   765  007B                     _i2c_addr:	
   766  007B                     	ds	1
   767                           
   768                           	psect	bssBANK0
   769  0028                     __pbssBANK0:	
   770  0028                     _MASKED_I2C_PACKAGE:	
   771  0028                     	ds	2
   772  002A                     _I2C_PACKAGE:	
   773  002A                     	ds	2
   774  002C                     _display:	
   775  002C                     	ds	1
   776  002D                     _INT_FLAGS:	
   777  002D                     	ds	1
   778                           
   779                           	psect	cstackCOMMON
   780  0070                     __pcstackCOMMON:	
   781  0070                     ?_init:	
   782  0070                     ?_lcd_display_init:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_lcd_display_clear:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_update_if_flag_set:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_update_display:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_lcd_display_write_char:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_init_oscillator:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_init_ports:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_init_i2c:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_init_interrupt:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_res_ports:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_set_ports:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_init_interrupt_timer:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_on_interrupt_i2c:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ??_on_interrupt_i2c:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_on_interrupt_timer_0:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ??_on_interrupt_timer_0:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_main:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_interruptHandler:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_lcd_display_port:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_lcd_display_cmd:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 1 bytes @ 0x0
   844  0070                     	ds	2
   845  0072                     ??_init:	
   846  0072                     ??_init_oscillator:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     ??_init_ports:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     ??_init_i2c:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     ??_init_interrupt:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0072                     ??_res_ports:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0072                     ??_set_ports:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0072                     ??_init_interrupt_timer:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0072                     ??_interruptHandler:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0072                     ??_lcd_display_port:	
   871                           ; 1 bytes @ 0x2
   872                           
   873  0072                     lcd_display_port@a:	
   874                           ; 1 bytes @ 0x2
   875                           
   876                           
   877                           ; 1 bytes @ 0x2
   878  0072                     	ds	1
   879  0073                     ??_lcd_display_write_char:	
   880  0073                     ??_lcd_display_cmd:	
   881                           ; 1 bytes @ 0x3
   882                           
   883                           
   884                           ; 1 bytes @ 0x3
   885  0073                     	ds	1
   886  0074                     lcd_display_cmd@a:	
   887  0074                     lcd_display_write_char@temp:	
   888                           ; 1 bytes @ 0x4
   889                           
   890                           
   891                           ; 1 bytes @ 0x4
   892  0074                     	ds	1
   893  0075                     ??_lcd_display_init:	
   894  0075                     ??_lcd_display_clear:	
   895                           ; 1 bytes @ 0x5
   896                           
   897  0075                     ?_lcd_display_set_cursor:	
   898                           ; 1 bytes @ 0x5
   899                           
   900  0075                     lcd_display_set_cursor@b:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     lcd_display_write_char@y:	
   904                           ; 1 bytes @ 0x5
   905                           
   906                           
   907                           ; 1 bytes @ 0x5
   908  0075                     	ds	1
   909  0076                     ??_lcd_display_set_cursor:	
   910  0076                     lcd_display_write_char@a:	
   911                           ; 1 bytes @ 0x6
   912                           
   913                           
   914                           ; 1 bytes @ 0x6
   915  0076                     	ds	1
   916  0077                     ?_lcd_display_write_string:	
   917  0077                     lcd_display_write_string@a:	
   918                           ; 1 bytes @ 0x7
   919                           
   920                           
   921                           ; 2 bytes @ 0x7
   922  0077                     	ds	2
   923  0079                     ??_lcd_display_write_string:	
   924                           
   925                           ; 1 bytes @ 0x9
   926  0079                     	ds	1
   927  007A                     ??_update_if_flag_set:	
   928  007A                     ??_update_display:	
   929                           ; 1 bytes @ 0xA
   930                           
   931  007A                     ??_main:	
   932                           ; 1 bytes @ 0xA
   933                           
   934                           
   935                           	psect	cstackBANK0
   936  0020                     __pcstackBANK0:	
   937                           ; 1 bytes @ 0xA
   938                           
   939  0020                     lcd_display_set_cursor@a:	
   940  0020                     lcd_display_write_string@i:	
   941                           ; 1 bytes @ 0x0
   942                           
   943                           
   944                           ; 2 bytes @ 0x0
   945  0020                     	ds	1
   946  0021                     lcd_display_set_cursor@z:	
   947                           
   948                           ; 1 bytes @ 0x1
   949  0021                     	ds	1
   950  0022                     lcd_display_set_cursor@y:	
   951                           
   952                           ; 1 bytes @ 0x2
   953  0022                     	ds	1
   954  0023                     lcd_display_set_cursor@temp:	
   955                           
   956                           ; 1 bytes @ 0x3
   957  0023                     	ds	1
   958  0024                     ?_display_i2c_data:	
   959  0024                     display_i2c_data@i2c_package:	
   960                           ; 1 bytes @ 0x4
   961                           
   962                           
   963                           ; 2 bytes @ 0x4
   964  0024                     	ds	2
   965  0026                     ??_display_i2c_data:	
   966                           
   967                           ; 1 bytes @ 0x6
   968  0026                     	ds	1
   969  0027                     display_i2c_data@line:	
   970                           
   971                           ; 1 bytes @ 0x7
   972  0027                     	ds	1
   973                           
   974                           	psect	maintext
   975  01C5                     __pmaintext:	
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 16 in file "i2c_lcd_display_1519.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : B1F/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels required when called:    8
  1001 ;; This function calls:
  1002 ;;		_init
  1003 ;;		_lcd_display_clear
  1004 ;;		_lcd_display_init
  1005 ;;		_lcd_display_set_cursor
  1006 ;;		_lcd_display_write_string
  1007 ;;		_update_if_flag_set
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _main
  1015  01C5                     _main:	
  1016  01C5                     l1301:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1019                           
  1020                           
  1021                           ;i2c_lcd_display_1519.c: 19:     init();
  1022  01C5  3182  223D  3181   	fcall	_init
  1023                           
  1024                           ;i2c_lcd_display_1519.c: 21:     lcd_display_init();
  1025  01C8  3180  20EB  3181   	fcall	_lcd_display_init
  1026                           
  1027                           ;i2c_lcd_display_1519.c: 23:     lcd_display_clear();
  1028  01CB  3182  226C  3181   	fcall	_lcd_display_clear
  1029                           
  1030                           ;i2c_lcd_display_1519.c: 24:     lcd_display_set_cursor(1,1);
  1031  01CE  01F5               	clrf	lcd_display_set_cursor@b
  1032  01CF  0AF5               	incf	lcd_display_set_cursor@b,f
  1033  01D0  3001               	movlw	1
  1034  01D1  3180  20A2  3181   	fcall	_lcd_display_set_cursor
  1035  01D4                     l1303:	
  1036                           
  1037                           ;i2c_lcd_display_1519.c: 25:     lcd_display_write_string("Waiting ...");
  1038  01D4  304A               	movlw	low (STR_1| (0+32768))
  1039  01D5  00F7               	movwf	lcd_display_write_string@a
  1040  01D6  3082               	movlw	high (STR_1| (0+32768))
  1041  01D7  00F8               	movwf	lcd_display_write_string@a+1
  1042  01D8  3181  21A6  3181   	fcall	_lcd_display_write_string
  1043  01DB                     l1305:	
  1044                           
  1045                           ;i2c_lcd_display_1519.c: 29:         update_if_flag_set();
  1046  01DB  3182  2262  3181   	fcall	_update_if_flag_set
  1047                           
  1048                           ;i2c_lcd_display_1519.c: 30:     }
  1049  01DE  29DB               	goto	l1305
  1050  01DF  3180  2821         	ljmp	start
  1051  01E1                     __end_of_main:	
  1052                           
  1053                           	psect	text1
  1054  0262                     __ptext1:	
  1055 ;; *************** function _update_if_flag_set *****************
  1056 ;; Defined at:
  1057 ;;		line 35 in file "i2c_lcd_display_1519.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    7
  1078 ;; This function calls:
  1079 ;;		_update_display
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _update_if_flag_set
  1087  0262                     _update_if_flag_set:	
  1088  0262                     l1295:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _update_if_flag_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1091                           
  1092                           
  1093                           ;i2c_lcd_display_1519.c: 37:     if (INT_FLAGS.update_lcd_display){
  1094  0262  0020               	movlb	0	; select bank0
  1095  0263  1C2D               	btfss	_INT_FLAGS,0	;volatile
  1096  0264  2A66               	goto	u731
  1097  0265  2A67               	goto	u730
  1098  0266                     u731:	
  1099  0266  2A6B               	goto	l37
  1100  0267                     u730:	
  1101  0267                     l1297:	
  1102                           
  1103                           ;i2c_lcd_display_1519.c: 38:         INT_FLAGS.update_lcd_display = 0;
  1104  0267  102D               	bcf	_INT_FLAGS,0	;volatile
  1105  0268                     l1299:	
  1106                           
  1107                           ;i2c_lcd_display_1519.c: 39:         update_display();
  1108  0268  3182  2209  3182   	fcall	_update_display
  1109  026B                     l37:	
  1110  026B  0008               	return
  1111  026C                     __end_of_update_if_flag_set:	
  1112                           
  1113                           	psect	text2
  1114  0209                     __ptext2:	
  1115 ;; *************** function _update_display *****************
  1116 ;; Defined at:
  1117 ;;		line 44 in file "i2c_lcd_display_1519.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;Total ram usage:        0 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    6
  1138 ;; This function calls:
  1139 ;;		_display_i2c_data
  1140 ;; This function is called by:
  1141 ;;		_update_if_flag_set
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _update_display
  1147  0209                     _update_display:	
  1148  0209                     l1281:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _update_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1151                           
  1152                           
  1153                           ;i2c_lcd_display_1519.c: 47:     display_i2c_data(1, I2C_PACKAGE);
  1154  0209  0020               	movlb	0	; select bank0
  1155  020A  082B               	movf	_I2C_PACKAGE+1,w	;volatile
  1156  020B  00A5               	movwf	display_i2c_data@i2c_package+1
  1157  020C  082A               	movf	_I2C_PACKAGE,w	;volatile
  1158  020D  00A4               	movwf	display_i2c_data@i2c_package
  1159  020E  3001               	movlw	1
  1160  020F  3181  212E  3182   	fcall	_display_i2c_data
  1161                           
  1162                           ;i2c_lcd_display_1519.c: 48:     display_i2c_data(2, MASKED_I2C_PACKAGE);
  1163  0212  0020               	movlb	0	; select bank0
  1164  0213  0829               	movf	_MASKED_I2C_PACKAGE+1,w	;volatile
  1165  0214  00A5               	movwf	display_i2c_data@i2c_package+1
  1166  0215  0828               	movf	_MASKED_I2C_PACKAGE,w	;volatile
  1167  0216  00A4               	movwf	display_i2c_data@i2c_package
  1168  0217  3002               	movlw	2
  1169  0218  3181  212E  3182   	fcall	_display_i2c_data
  1170  021B                     l40:	
  1171  021B  0008               	return
  1172  021C                     __end_of_update_display:	
  1173                           
  1174                           	psect	text3
  1175  012E                     __ptext3:	
  1176 ;; *************** function _display_i2c_data *****************
  1177 ;; Defined at:
  1178 ;;		line 51 in file "i2c_lcd_display_1519.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  line            1    wreg     unsigned char 
  1181 ;;  i2c_package     2    4[BANK0 ] struct .
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  line            1    7[BANK0 ] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;Total ram usage:        4 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    5
  1200 ;; This function calls:
  1201 ;;		_lcd_display_set_cursor
  1202 ;;		_lcd_display_write_char
  1203 ;;		_lcd_display_write_string
  1204 ;; This function is called by:
  1205 ;;		_update_display
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _display_i2c_data
  1211  012E                     _display_i2c_data:	
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _display_i2c_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1215                           ;display_i2c_data@line stored from wreg
  1216  012E  0020               	movlb	0	; select bank0
  1217  012F  00A7               	movwf	display_i2c_data@line
  1218  0130                     l1269:	
  1219                           
  1220                           ;i2c_lcd_display_1519.c: 51: void display_i2c_data (uint8_t line, i2c_package_t i2c_pack
      +                          age);i2c_lcd_display_1519.c: 52: {;i2c_lcd_display_1519.c: 53:     lcd_display_set_curso
      +                          r(line, 1);
  1221  0130  01F5               	clrf	lcd_display_set_cursor@b
  1222  0131  0AF5               	incf	lcd_display_set_cursor@b,f
  1223  0132  0827               	movf	display_i2c_data@line,w
  1224  0133  3180  20A2  3181   	fcall	_lcd_display_set_cursor
  1225  0136                     l1271:	
  1226                           
  1227                           ;i2c_lcd_display_1519.c: 54:     lcd_display_write_string("add:  data:  I2C");
  1228  0136  301C               	movlw	low (STR_2| (0+32768))
  1229  0137  00F7               	movwf	lcd_display_write_string@a
  1230  0138  3082               	movlw	high (STR_2| (0+32768))
  1231  0139  00F8               	movwf	lcd_display_write_string@a+1
  1232  013A  3181  21A6  3181   	fcall	_lcd_display_write_string
  1233  013D                     l1273:	
  1234                           
  1235                           ;i2c_lcd_display_1519.c: 55:     lcd_display_set_cursor(line,5);
  1236  013D  3005               	movlw	5
  1237  013E  0020               	movlb	0	; select bank0
  1238  013F  00A6               	movwf	??_display_i2c_data
  1239  0140  0826               	movf	??_display_i2c_data,w
  1240  0141  00F5               	movwf	lcd_display_set_cursor@b
  1241  0142  0827               	movf	display_i2c_data@line,w
  1242  0143  3180  20A2  3181   	fcall	_lcd_display_set_cursor
  1243  0146                     l1275:	
  1244                           
  1245                           ;i2c_lcd_display_1519.c: 56:     lcd_display_write_char(i2c_package.addr);
  1246  0146  0020               	movlb	0	; select bank0
  1247  0147  0824               	movf	display_i2c_data@i2c_package,w
  1248  0148  3181  215A  3181   	fcall	_lcd_display_write_char
  1249  014B                     l1277:	
  1250                           
  1251                           ;i2c_lcd_display_1519.c: 57:     lcd_display_set_cursor(line,12);
  1252  014B  300C               	movlw	12
  1253  014C  0020               	movlb	0	; select bank0
  1254  014D  00A6               	movwf	??_display_i2c_data
  1255  014E  0826               	movf	??_display_i2c_data,w
  1256  014F  00F5               	movwf	lcd_display_set_cursor@b
  1257  0150  0827               	movf	display_i2c_data@line,w
  1258  0151  3180  20A2  3181   	fcall	_lcd_display_set_cursor
  1259  0154                     l1279:	
  1260                           
  1261                           ;i2c_lcd_display_1519.c: 58:     lcd_display_write_char(i2c_package.data);
  1262  0154  0020               	movlb	0	; select bank0
  1263  0155  0825               	movf	display_i2c_data@i2c_package+1,w
  1264  0156  3181  215A  3181   	fcall	_lcd_display_write_char
  1265  0159                     l43:	
  1266  0159  0008               	return
  1267  015A                     __end_of_display_i2c_data:	
  1268                           
  1269                           	psect	text4
  1270  01A6                     __ptext4:	
  1271 ;; *************** function _lcd_display_write_string *****************
  1272 ;; Defined at:
  1273 ;;		line 99 in file "lcd_display.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  a               2    7[COMMON] PTR unsigned char 
  1276 ;;		 -> STR_2(17), STR_1(12), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  i               2    0[BANK0 ] int 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;Total ram usage:        5 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    4
  1295 ;; This function calls:
  1296 ;;		_lcd_display_write_char
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;;		_display_i2c_data
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _lcd_display_write_string
  1305  01A6                     _lcd_display_write_string:	
  1306  01A6                     l1261:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _lcd_display_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1309                           
  1310                           
  1311                           ;lcd_display.c: 99: void lcd_display_write_string(char *a);lcd_display.c: 100: {;lcd_dis
      +                          play.c: 101:  int i;;lcd_display.c: 102:  for(i=0;a[i]!='\0';i++)
  1312  01A6  0020               	movlb	0	; select bank0
  1313  01A7  01A0               	clrf	lcd_display_write_string@i
  1314  01A8  01A1               	clrf	lcd_display_write_string@i+1
  1315  01A9  29B9               	goto	l1267
  1316  01AA                     l1263:	
  1317                           
  1318                           ;lcd_display.c: 103:     lcd_display_write_char(a[i]);
  1319  01AA  0877               	movf	lcd_display_write_string@a,w
  1320  01AB  0720               	addwf	lcd_display_write_string@i,w
  1321  01AC  0084               	movwf	4
  1322  01AD  0878               	movf	lcd_display_write_string@a+1,w
  1323  01AE  3D21               	addwfc	lcd_display_write_string@i+1,w
  1324  01AF  0085               	movwf	5
  1325  01B0  0800               	movf	0,w	;code access
  1326  01B1  3181  215A  3181   	fcall	_lcd_display_write_char
  1327  01B4                     l1265:	
  1328  01B4  3001               	movlw	1
  1329  01B5  0020               	movlb	0	; select bank0
  1330  01B6  07A0               	addwf	lcd_display_write_string@i,f
  1331  01B7  3000               	movlw	0
  1332  01B8  3DA1               	addwfc	lcd_display_write_string@i+1,f
  1333  01B9                     l1267:	
  1334  01B9  0877               	movf	lcd_display_write_string@a,w
  1335  01BA  0720               	addwf	lcd_display_write_string@i,w
  1336  01BB  0084               	movwf	4
  1337  01BC  0878               	movf	lcd_display_write_string@a+1,w
  1338  01BD  3D21               	addwfc	lcd_display_write_string@i+1,w
  1339  01BE  0085               	movwf	5
  1340  01BF  0012               	moviw fsr0++
  1341  01C0  1D03               	btfss	3,2
  1342  01C1  29C3               	goto	u721
  1343  01C2  29C4               	goto	u720
  1344  01C3                     u721:	
  1345  01C3  29AA               	goto	l1263
  1346  01C4                     u720:	
  1347  01C4                     l208:	
  1348  01C4  0008               	return
  1349  01C5                     __end_of_lcd_display_write_string:	
  1350                           
  1351                           	psect	text5
  1352  015A                     __ptext5:	
  1353 ;; *************** function _lcd_display_write_char *****************
  1354 ;; Defined at:
  1355 ;;		line 83 in file "lcd_display.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  a               1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  a               1    6[COMMON] unsigned char 
  1360 ;;  y               1    5[COMMON] unsigned char 
  1361 ;;  temp            1    4[COMMON] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;Total ram usage:        4 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    3
  1378 ;; This function calls:
  1379 ;;		_lcd_display_port
  1380 ;; This function is called by:
  1381 ;;		_display_i2c_data
  1382 ;;		_lcd_display_write_string
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _lcd_display_write_char
  1388  015A                     _lcd_display_write_char:	
  1389                           
  1390                           ;incstack = 0
  1391                           ; Regs used in _lcd_display_write_char: [wreg+status,2+status,0+pclath+cstack]
  1392                           ;lcd_display_write_char@a stored from wreg
  1393  015A  00F6               	movwf	lcd_display_write_char@a
  1394  015B                     l1211:	
  1395                           
  1396                           ;lcd_display.c: 83: void lcd_display_write_char(char a);lcd_display.c: 84: {;lcd_display
      +                          .c: 85:     char temp,y;;lcd_display.c: 86:     temp = a&0x0F;
  1397  015B  0876               	movf	lcd_display_write_char@a,w
  1398  015C  390F               	andlw	15
  1399  015D  00F3               	movwf	??_lcd_display_write_char
  1400  015E  0873               	movf	??_lcd_display_write_char,w
  1401  015F  00F4               	movwf	lcd_display_write_char@temp
  1402                           
  1403                           ;lcd_display.c: 87:     y = a&0xF0;
  1404  0160  0876               	movf	lcd_display_write_char@a,w
  1405  0161  39F0               	andlw	240
  1406  0162  00F3               	movwf	??_lcd_display_write_char
  1407  0163  0873               	movf	??_lcd_display_write_char,w
  1408  0164  00F5               	movwf	lcd_display_write_char@y
  1409  0165                     l1213:	
  1410                           
  1411                           ;lcd_display.c: 88:     LATB1 = 1;
  1412  0165  0022               	movlb	2	; select bank2
  1413  0166  148D               	bsf	13,1	;volatile
  1414  0167                     l1215:	
  1415                           
  1416                           ;lcd_display.c: 89:     lcd_display_port(y>>4);
  1417  0167  0875               	movf	lcd_display_write_char@y,w
  1418  0168  00F3               	movwf	??_lcd_display_write_char
  1419  0169  3004               	movlw	4
  1420  016A                     u675:	
  1421  016A  36F3               	lsrf	??_lcd_display_write_char,f
  1422  016B  0B89               	decfsz	9,f
  1423  016C  296A               	goto	u675
  1424  016D  0873               	movf	??_lcd_display_write_char,w
  1425  016E  3181  2186  3181   	fcall	_lcd_display_port
  1426  0171                     l1217:	
  1427                           
  1428                           ;lcd_display.c: 90:     LATB0 = 1;
  1429  0171  0022               	movlb	2	; select bank2
  1430  0172  140D               	bsf	13,0	;volatile
  1431  0173                     l1219:	
  1432                           
  1433                           ;lcd_display.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1434  0173  301A               	movlw	26
  1435  0174                     u747:	
  1436  0174  0B89               	decfsz	9,f
  1437  0175  2974               	goto	u747
  1438  0176  3200               	nop2
  1439  0177                     l1221:	
  1440                           
  1441                           ;lcd_display.c: 92:     LATB0 = 0;
  1442  0177  0022               	movlb	2	; select bank2
  1443  0178  100D               	bcf	13,0	;volatile
  1444  0179                     l1223:	
  1445                           
  1446                           ;lcd_display.c: 93:     lcd_display_port(temp);
  1447  0179  0874               	movf	lcd_display_write_char@temp,w
  1448  017A  3181  2186  3181   	fcall	_lcd_display_port
  1449  017D                     l1225:	
  1450                           
  1451                           ;lcd_display.c: 94:     LATB0 = 1;
  1452  017D  0022               	movlb	2	; select bank2
  1453  017E  140D               	bsf	13,0	;volatile
  1454  017F                     l1227:	
  1455                           
  1456                           ;lcd_display.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1457  017F  301A               	movlw	26
  1458  0180                     u757:	
  1459  0180  0B89               	decfsz	9,f
  1460  0181  2980               	goto	u757
  1461  0182  3200               	nop2
  1462  0183                     l1229:	
  1463                           
  1464                           ;lcd_display.c: 96:     LATB0 = 0;
  1465  0183  0022               	movlb	2	; select bank2
  1466  0184  100D               	bcf	13,0	;volatile
  1467  0185                     l202:	
  1468  0185  0008               	return
  1469  0186                     __end_of_lcd_display_write_char:	
  1470                           
  1471                           	psect	text6
  1472  00A2                     __ptext6:	
  1473 ;; *************** function _lcd_display_set_cursor *****************
  1474 ;; Defined at:
  1475 ;;		line 43 in file "lcd_display.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  a               1    wreg     unsigned char 
  1478 ;;  b               1    5[COMMON] unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  a               1    0[BANK0 ] unsigned char 
  1481 ;;  temp            1    3[BANK0 ] unsigned char 
  1482 ;;  y               1    2[BANK0 ] unsigned char 
  1483 ;;  z               1    1[BANK0 ] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1494 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1496 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1497 ;;Total ram usage:        7 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    4
  1500 ;; This function calls:
  1501 ;;		_lcd_display_cmd
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;;		_display_i2c_data
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _lcd_display_set_cursor
  1510  00A2                     _lcd_display_set_cursor:	
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _lcd_display_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1514                           ;lcd_display_set_cursor@a stored from wreg
  1515  00A2  0020               	movlb	0	; select bank0
  1516  00A3  00A0               	movwf	lcd_display_set_cursor@a
  1517  00A4                     l1241:	
  1518                           
  1519                           ;lcd_display.c: 43: void lcd_display_set_cursor(char a, char b);lcd_display.c: 44: {;lcd
      +                          _display.c: 45:  char temp,z,y;;lcd_display.c: 46:  if(a == 1)
  1520  00A4  0320               	decf	lcd_display_set_cursor@a,w
  1521  00A5  1D03               	btfss	3,2
  1522  00A6  28A8               	goto	u681
  1523  00A7  28A9               	goto	u680
  1524  00A8                     u681:	
  1525  00A8  28C7               	goto	l1251
  1526  00A9                     u680:	
  1527  00A9                     l1243:	
  1528                           
  1529                           ;lcd_display.c: 47:  {;lcd_display.c: 48:    temp = 0x80 + b - 1;
  1530  00A9  0875               	movf	lcd_display_set_cursor@b,w
  1531  00AA  3E7F               	addlw	127
  1532  00AB  00F6               	movwf	??_lcd_display_set_cursor
  1533  00AC  0876               	movf	??_lcd_display_set_cursor,w
  1534  00AD  00A3               	movwf	lcd_display_set_cursor@temp
  1535                           
  1536                           ;lcd_display.c: 49:   z = temp>>4;
  1537  00AE  0823               	movf	lcd_display_set_cursor@temp,w
  1538  00AF  00F6               	movwf	??_lcd_display_set_cursor
  1539  00B0  3004               	movlw	4
  1540  00B1                     u695:	
  1541  00B1  36F6               	lsrf	??_lcd_display_set_cursor,f
  1542  00B2  0B89               	decfsz	9,f
  1543  00B3  28B1               	goto	u695
  1544  00B4  0876               	movf	??_lcd_display_set_cursor,w
  1545  00B5  00F7               	movwf	??_lcd_display_set_cursor+1
  1546  00B6  0877               	movf	??_lcd_display_set_cursor+1,w
  1547  00B7  00A1               	movwf	lcd_display_set_cursor@z
  1548  00B8                     l1245:	
  1549                           
  1550                           ;lcd_display.c: 50:   y = temp & 0x0F;
  1551  00B8  0823               	movf	lcd_display_set_cursor@temp,w
  1552  00B9  390F               	andlw	15
  1553  00BA  00F6               	movwf	??_lcd_display_set_cursor
  1554  00BB  0876               	movf	??_lcd_display_set_cursor,w
  1555  00BC  00A2               	movwf	lcd_display_set_cursor@y
  1556  00BD                     l1247:	
  1557                           
  1558                           ;lcd_display.c: 51:   lcd_display_cmd(z);
  1559  00BD  0821               	movf	lcd_display_set_cursor@z,w
  1560  00BE  3181  21E1  3180   	fcall	_lcd_display_cmd
  1561  00C1                     l1249:	
  1562                           
  1563                           ;lcd_display.c: 52:   lcd_display_cmd(y);
  1564  00C1  0020               	movlb	0	; select bank0
  1565  00C2  0822               	movf	lcd_display_set_cursor@y,w
  1566  00C3  3181  21E1  3180   	fcall	_lcd_display_cmd
  1567                           
  1568                           ;lcd_display.c: 53:  }
  1569  00C6  28EA               	goto	l196
  1570  00C7                     l1251:	
  1571  00C7  3002               	movlw	2
  1572  00C8  0620               	xorwf	lcd_display_set_cursor@a,w
  1573  00C9  1D03               	btfss	3,2
  1574  00CA  28CC               	goto	u701
  1575  00CB  28CD               	goto	u700
  1576  00CC                     u701:	
  1577  00CC  28EA               	goto	l196
  1578  00CD                     u700:	
  1579  00CD                     l1253:	
  1580                           
  1581                           ;lcd_display.c: 55:  {;lcd_display.c: 56:   temp = 0xC0 + b - 1;
  1582  00CD  0875               	movf	lcd_display_set_cursor@b,w
  1583  00CE  3EBF               	addlw	191
  1584  00CF  00F6               	movwf	??_lcd_display_set_cursor
  1585  00D0  0876               	movf	??_lcd_display_set_cursor,w
  1586  00D1  00A3               	movwf	lcd_display_set_cursor@temp
  1587                           
  1588                           ;lcd_display.c: 57:   z = temp>>4;
  1589  00D2  0823               	movf	lcd_display_set_cursor@temp,w
  1590  00D3  00F6               	movwf	??_lcd_display_set_cursor
  1591  00D4  3004               	movlw	4
  1592  00D5                     u715:	
  1593  00D5  36F6               	lsrf	??_lcd_display_set_cursor,f
  1594  00D6  0B89               	decfsz	9,f
  1595  00D7  28D5               	goto	u715
  1596  00D8  0876               	movf	??_lcd_display_set_cursor,w
  1597  00D9  00F7               	movwf	??_lcd_display_set_cursor+1
  1598  00DA  0877               	movf	??_lcd_display_set_cursor+1,w
  1599  00DB  00A1               	movwf	lcd_display_set_cursor@z
  1600  00DC                     l1255:	
  1601                           
  1602                           ;lcd_display.c: 58:   y = temp & 0x0F;
  1603  00DC  0823               	movf	lcd_display_set_cursor@temp,w
  1604  00DD  390F               	andlw	15
  1605  00DE  00F6               	movwf	??_lcd_display_set_cursor
  1606  00DF  0876               	movf	??_lcd_display_set_cursor,w
  1607  00E0  00A2               	movwf	lcd_display_set_cursor@y
  1608  00E1                     l1257:	
  1609                           
  1610                           ;lcd_display.c: 59:   lcd_display_cmd(z);
  1611  00E1  0821               	movf	lcd_display_set_cursor@z,w
  1612  00E2  3181  21E1  3180   	fcall	_lcd_display_cmd
  1613  00E5                     l1259:	
  1614                           
  1615                           ;lcd_display.c: 60:   lcd_display_cmd(y);
  1616  00E5  0020               	movlb	0	; select bank0
  1617  00E6  0822               	movf	lcd_display_set_cursor@y,w
  1618  00E7  3181  21E1  3180   	fcall	_lcd_display_cmd
  1619  00EA                     l196:	
  1620  00EA  0008               	return
  1621  00EB                     __end_of_lcd_display_set_cursor:	
  1622                           
  1623                           	psect	text7
  1624  00EB                     __ptext7:	
  1625 ;; *************** function _lcd_display_init *****************
  1626 ;; Defined at:
  1627 ;;		line 64 in file "lcd_display.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1645 ;;Total ram usage:        1 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    4
  1648 ;; This function calls:
  1649 ;;		_lcd_display_cmd
  1650 ;;		_lcd_display_port
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _lcd_display_init
  1658  00EB                     _lcd_display_init:	
  1659  00EB                     l1283:	
  1660                           ;incstack = 0
  1661                           ; Regs used in _lcd_display_init: [wreg+status,2+status,0+pclath+cstack]
  1662                           
  1663                           
  1664                           ;lcd_display.c: 66:     lcd_display_port(0x00);
  1665  00EB  3000               	movlw	0
  1666  00EC  3181  2186  3180   	fcall	_lcd_display_port
  1667  00EF                     l1285:	
  1668                           
  1669                           ;lcd_display.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1670  00EF  3034               	movlw	52
  1671  00F0  00F5               	movwf	??_lcd_display_init
  1672  00F1  30F2               	movlw	242
  1673  00F2                     u767:	
  1674  00F2  0B89               	decfsz	9,f
  1675  00F3  28F2               	goto	u767
  1676  00F4  0BF5               	decfsz	??_lcd_display_init,f
  1677  00F5  28F2               	goto	u767
  1678  00F6                     l1287:	
  1679                           
  1680                           ;lcd_display.c: 68:     lcd_display_cmd(0x03);
  1681  00F6  3003               	movlw	3
  1682  00F7  3181  21E1  3180   	fcall	_lcd_display_cmd
  1683                           
  1684                           ;lcd_display.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1685  00FA  300D               	movlw	13
  1686  00FB  00F5               	movwf	??_lcd_display_init
  1687  00FC  30FC               	movlw	252
  1688  00FD                     u777:	
  1689  00FD  0B89               	decfsz	9,f
  1690  00FE  28FD               	goto	u777
  1691  00FF  0BF5               	decfsz	??_lcd_display_init,f
  1692  0100  28FD               	goto	u777
  1693  0101                     l1289:	
  1694                           
  1695                           ;lcd_display.c: 70:     lcd_display_cmd(0x03);
  1696  0101  3003               	movlw	3
  1697  0102  3181  21E1  3180   	fcall	_lcd_display_cmd
  1698  0105                     l1291:	
  1699                           
  1700                           ;lcd_display.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1701  0105  301D               	movlw	29
  1702  0106  00F5               	movwf	??_lcd_display_init
  1703  0107  3091               	movlw	145
  1704  0108                     u787:	
  1705  0108  0B89               	decfsz	9,f
  1706  0109  2908               	goto	u787
  1707  010A  0BF5               	decfsz	??_lcd_display_init,f
  1708  010B  2908               	goto	u787
  1709  010C  0000               	nop
  1710                           
  1711                           ;lcd_display.c: 72:     lcd_display_cmd(0x03);
  1712  010D  3003               	movlw	3
  1713  010E  3181  21E1  3180   	fcall	_lcd_display_cmd
  1714                           
  1715                           ;lcd_display.c: 74:     lcd_display_cmd(0x02);
  1716  0111  3002               	movlw	2
  1717  0112  3181  21E1  3180   	fcall	_lcd_display_cmd
  1718                           
  1719                           ;lcd_display.c: 75:     lcd_display_cmd(0x02);
  1720  0115  3002               	movlw	2
  1721  0116  3181  21E1  3180   	fcall	_lcd_display_cmd
  1722                           
  1723                           ;lcd_display.c: 76:     lcd_display_cmd(0x08);
  1724  0119  3008               	movlw	8
  1725  011A  3181  21E1  3180   	fcall	_lcd_display_cmd
  1726                           
  1727                           ;lcd_display.c: 77:     lcd_display_cmd(0x00);
  1728  011D  3000               	movlw	0
  1729  011E  3181  21E1  3180   	fcall	_lcd_display_cmd
  1730                           
  1731                           ;lcd_display.c: 78:     lcd_display_cmd(0x0C);
  1732  0121  300C               	movlw	12
  1733  0122  3181  21E1  3180   	fcall	_lcd_display_cmd
  1734                           
  1735                           ;lcd_display.c: 79:     lcd_display_cmd(0x00);
  1736  0125  3000               	movlw	0
  1737  0126  3181  21E1  3180   	fcall	_lcd_display_cmd
  1738                           
  1739                           ;lcd_display.c: 80:     lcd_display_cmd(0x06);
  1740  0129  3006               	movlw	6
  1741  012A  3181  21E1  3180   	fcall	_lcd_display_cmd
  1742  012D                     l199:	
  1743  012D  0008               	return
  1744  012E                     __end_of_lcd_display_init:	
  1745                           
  1746                           	psect	text8
  1747  026C                     __ptext8:	
  1748 ;; *************** function _lcd_display_clear *****************
  1749 ;; Defined at:
  1750 ;;		line 37 in file "lcd_display.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    4
  1771 ;; This function calls:
  1772 ;;		_lcd_display_cmd
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function _lcd_display_clear
  1780  026C                     _lcd_display_clear:	
  1781  026C                     l1293:	
  1782                           ;incstack = 0
  1783                           ; Regs used in _lcd_display_clear: [wreg+status,2+status,0+pclath+cstack]
  1784                           
  1785                           
  1786                           ;lcd_display.c: 39:  lcd_display_cmd(0);
  1787  026C  3000               	movlw	0
  1788  026D  3181  21E1  3182   	fcall	_lcd_display_cmd
  1789                           
  1790                           ;lcd_display.c: 40:  lcd_display_cmd(1);
  1791  0270  3001               	movlw	1
  1792  0271  3181  21E1  3182   	fcall	_lcd_display_cmd
  1793  0274                     l190:	
  1794  0274  0008               	return
  1795  0275                     __end_of_lcd_display_clear:	
  1796                           
  1797                           	psect	text9
  1798  01E1                     __ptext9:	
  1799 ;; *************** function _lcd_display_cmd *****************
  1800 ;; Defined at:
  1801 ;;		line 28 in file "lcd_display.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  a               1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  a               1    4[COMMON] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    3
  1822 ;; This function calls:
  1823 ;;		_lcd_display_port
  1824 ;; This function is called by:
  1825 ;;		_lcd_display_clear
  1826 ;;		_lcd_display_set_cursor
  1827 ;;		_lcd_display_init
  1828 ;;		_lcd_display_shift_right
  1829 ;;		_lcd_display_shift_left
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _lcd_display_cmd
  1835  01E1                     _lcd_display_cmd:	
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _lcd_display_cmd: [wreg+status,2+status,0+pclath+cstack]
  1839                           ;lcd_display_cmd@a stored from wreg
  1840  01E1  00F4               	movwf	lcd_display_cmd@a
  1841  01E2                     l1231:	
  1842                           
  1843                           ;lcd_display.c: 28: void lcd_display_cmd(char a);lcd_display.c: 29: {;lcd_display.c: 30:
      +                               LATB1 = 0;
  1844  01E2  0022               	movlb	2	; select bank2
  1845  01E3  108D               	bcf	13,1	;volatile
  1846  01E4                     l1233:	
  1847                           
  1848                           ;lcd_display.c: 31:  lcd_display_port(a);
  1849  01E4  0874               	movf	lcd_display_cmd@a,w
  1850  01E5  3181  2186  3181   	fcall	_lcd_display_port
  1851  01E8                     l1235:	
  1852                           
  1853                           ;lcd_display.c: 32:  LATB0 = 1;
  1854  01E8  0022               	movlb	2	; select bank2
  1855  01E9  140D               	bsf	13,0	;volatile
  1856  01EA                     l1237:	
  1857                           
  1858                           ;lcd_display.c: 33:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1859  01EA  300B               	movlw	11
  1860  01EB  00F3               	movwf	??_lcd_display_cmd
  1861  01EC  3062               	movlw	98
  1862  01ED                     u797:	
  1863  01ED  0B89               	decfsz	9,f
  1864  01EE  29ED               	goto	u797
  1865  01EF  0BF3               	decfsz	??_lcd_display_cmd,f
  1866  01F0  29ED               	goto	u797
  1867  01F1  3200               	nop2
  1868  01F2                     l1239:	
  1869                           
  1870                           ;lcd_display.c: 34:     LATB0 = 0;
  1871  01F2  0022               	movlb	2	; select bank2
  1872  01F3  100D               	bcf	13,0	;volatile
  1873  01F4                     l187:	
  1874  01F4  0008               	return
  1875  01F5                     __end_of_lcd_display_cmd:	
  1876                           
  1877                           	psect	text10
  1878  0186                     __ptext10:	
  1879 ;; *************** function _lcd_display_port *****************
  1880 ;; Defined at:
  1881 ;;		line 5 in file "lcd_display.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  a               1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  a               1    2[COMMON] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;Total ram usage:        1 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    2
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_lcd_display_cmd
  1906 ;;		_lcd_display_init
  1907 ;;		_lcd_display_write_char
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _lcd_display_port
  1913  0186                     _lcd_display_port:	
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _lcd_display_port: [wreg]
  1917                           ;lcd_display_port@a stored from wreg
  1918  0186  00F2               	movwf	lcd_display_port@a
  1919  0187                     l1195:	
  1920                           
  1921                           ;lcd_display.c: 5: void lcd_display_port(char a);lcd_display.c: 6: {;lcd_display.c: 7:  
      +                          if(a & 1)
  1922  0187  1C72               	btfss	lcd_display_port@a,0
  1923  0188  298A               	goto	u631
  1924  0189  298B               	goto	u630
  1925  018A                     u631:	
  1926  018A  298E               	goto	l176
  1927  018B                     u630:	
  1928  018B                     l1197:	
  1929                           
  1930                           ;lcd_display.c: 8:   LATA0 = 1;
  1931  018B  0022               	movlb	2	; select bank2
  1932  018C  140C               	bsf	12,0	;volatile
  1933  018D  2990               	goto	l1199
  1934  018E                     l176:	
  1935                           ;lcd_display.c: 9:  else
  1936                           
  1937                           
  1938                           ;lcd_display.c: 10:   LATA0 = 0;
  1939  018E  0022               	movlb	2	; select bank2
  1940  018F  100C               	bcf	12,0	;volatile
  1941  0190                     l1199:	
  1942                           
  1943                           ;lcd_display.c: 12:  if(a & 2)
  1944  0190  1CF2               	btfss	lcd_display_port@a,1
  1945  0191  2993               	goto	u641
  1946  0192  2994               	goto	u640
  1947  0193                     u641:	
  1948  0193  2996               	goto	l178
  1949  0194                     u640:	
  1950  0194                     l1201:	
  1951                           
  1952                           ;lcd_display.c: 13:   LATA1 = 1;
  1953  0194  148C               	bsf	12,1	;volatile
  1954  0195  2997               	goto	l1203
  1955  0196                     l178:	
  1956                           ;lcd_display.c: 14:  else
  1957                           
  1958                           
  1959                           ;lcd_display.c: 15:   LATA1 = 0;
  1960  0196  108C               	bcf	12,1	;volatile
  1961  0197                     l1203:	
  1962                           
  1963                           ;lcd_display.c: 17:  if(a & 4)
  1964  0197  1D72               	btfss	lcd_display_port@a,2
  1965  0198  299A               	goto	u651
  1966  0199  299B               	goto	u650
  1967  019A                     u651:	
  1968  019A  299D               	goto	l180
  1969  019B                     u650:	
  1970  019B                     l1205:	
  1971                           
  1972                           ;lcd_display.c: 18:   LATA2 = 1;
  1973  019B  150C               	bsf	12,2	;volatile
  1974  019C  299E               	goto	l1207
  1975  019D                     l180:	
  1976                           ;lcd_display.c: 19:  else
  1977                           
  1978                           
  1979                           ;lcd_display.c: 20:   LATA2 = 0;
  1980  019D  110C               	bcf	12,2	;volatile
  1981  019E                     l1207:	
  1982                           
  1983                           ;lcd_display.c: 22:  if(a & 8)
  1984  019E  1DF2               	btfss	lcd_display_port@a,3
  1985  019F  29A1               	goto	u661
  1986  01A0  29A2               	goto	u660
  1987  01A1                     u661:	
  1988  01A1  29A4               	goto	l182
  1989  01A2                     u660:	
  1990  01A2                     l1209:	
  1991                           
  1992                           ;lcd_display.c: 23:   LATA3 = 1;
  1993  01A2  158C               	bsf	12,3	;volatile
  1994  01A3  29A5               	goto	l184
  1995  01A4                     l182:	
  1996                           ;lcd_display.c: 24:  else
  1997                           
  1998                           
  1999                           ;lcd_display.c: 25:   LATA3 = 0;
  2000  01A4  118C               	bcf	12,3	;volatile
  2001  01A5                     l184:	
  2002  01A5  0008               	return
  2003  01A6                     __end_of_lcd_display_port:	
  2004                           
  2005                           	psect	text11
  2006  023D                     __ptext11:	
  2007 ;; *************** function _init *****************
  2008 ;; Defined at:
  2009 ;;		line 10 in file "init.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    4
  2030 ;; This function calls:
  2031 ;;		_init_i2c
  2032 ;;		_init_interrupt
  2033 ;;		_init_oscillator
  2034 ;;		_init_ports
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _init
  2042  023D                     _init:	
  2043  023D                     l927:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2046                           
  2047                           
  2048                           ;init.c: 12:     init_oscillator();
  2049  023D  3182  227C  3182   	fcall	_init_oscillator
  2050  0240                     l929:	
  2051                           
  2052                           ;init.c: 13:     init_ports();
  2053  0240  3182  2275  3182   	fcall	_init_ports
  2054  0243                     l931:	
  2055                           
  2056                           ;init.c: 14:     init_i2c();
  2057  0243  3181  21F5  3182   	fcall	_init_i2c
  2058  0246                     l933:	
  2059                           
  2060                           ;init.c: 15:     init_interrupt();
  2061  0246  3182  2283  3182   	fcall	_init_interrupt
  2062  0249                     l110:	
  2063  0249  0008               	return
  2064  024A                     __end_of_init:	
  2065                           
  2066                           	psect	text12
  2067  0275                     __ptext12:	
  2068 ;; *************** function _init_ports *****************
  2069 ;; Defined at:
  2070 ;;		line 26 in file "init.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    3
  2091 ;; This function calls:
  2092 ;;		_res_ports
  2093 ;;		_set_ports
  2094 ;; This function is called by:
  2095 ;;		_init
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _init_ports
  2101  0275                     _init_ports:	
  2102  0275                     l903:	
  2103                           ;incstack = 0
  2104                           ; Regs used in _init_ports: [status,2+status,0+pclath+cstack]
  2105                           
  2106                           
  2107                           ;init.c: 28:     res_ports ();
  2108  0275  3182  222D  3182   	fcall	_res_ports
  2109                           
  2110                           ;init.c: 29:     set_ports ();
  2111  0278  3182  2288  3182   	fcall	_set_ports
  2112  027B                     l116:	
  2113  027B  0008               	return
  2114  027C                     __end_of_init_ports:	
  2115                           
  2116                           	psect	text13
  2117  0288                     __ptext13:	
  2118 ;; *************** function _set_ports *****************
  2119 ;; Defined at:
  2120 ;;		line 52 in file "init.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		None
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    2
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_init_ports
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _set_ports
  2150  0288                     _set_ports:	
  2151  0288                     l122:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _set_ports: []
  2154                           
  2155  0288  0008               	return
  2156  0289                     __end_of_set_ports:	
  2157                           
  2158                           	psect	text14
  2159  022D                     __ptext14:	
  2160 ;; *************** function _res_ports *****************
  2161 ;; Defined at:
  2162 ;;		line 31 in file "init.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		status,2
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:        0 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    2
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_init_ports
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _res_ports
  2192  022D                     _res_ports:	
  2193  022D                     l883:	
  2194                           ;incstack = 0
  2195                           ; Regs used in _res_ports: [status,2]
  2196                           
  2197                           
  2198                           ;init.c: 34:     TRISA = 0x00;
  2199  022D  0021               	movlb	1	; select bank1
  2200  022E  018C               	clrf	12	;volatile
  2201                           
  2202                           ;init.c: 35:     TRISB = 0x00;
  2203  022F  018D               	clrf	13	;volatile
  2204                           
  2205                           ;init.c: 36:     TRISC = 0x00;
  2206  0230  018E               	clrf	14	;volatile
  2207                           
  2208                           ;init.c: 37:     TRISD = 0x00;
  2209  0231  018F               	clrf	15	;volatile
  2210                           
  2211                           ;init.c: 40:     LATA = 0x00;
  2212  0232  0022               	movlb	2	; select bank2
  2213  0233  018C               	clrf	12	;volatile
  2214                           
  2215                           ;init.c: 41:     LATB = 0x00;
  2216  0234  018D               	clrf	13	;volatile
  2217                           
  2218                           ;init.c: 42:     LATC = 0x00;
  2219  0235  018E               	clrf	14	;volatile
  2220                           
  2221                           ;init.c: 43:     LATD = 0x00;
  2222  0236  018F               	clrf	15	;volatile
  2223                           
  2224                           ;init.c: 46:     ANSELA = 0x00;
  2225  0237  0023               	movlb	3	; select bank3
  2226  0238  018C               	clrf	12	;volatile
  2227                           
  2228                           ;init.c: 47:     ANSELB = 0x00;
  2229  0239  018D               	clrf	13	;volatile
  2230                           
  2231                           ;init.c: 48:     ANSELC = 0x00;
  2232  023A  018E               	clrf	14	;volatile
  2233                           
  2234                           ;init.c: 49:     ANSELD = 0x00;
  2235  023B  018F               	clrf	15	;volatile
  2236  023C                     l119:	
  2237  023C  0008               	return
  2238  023D                     __end_of_res_ports:	
  2239                           
  2240                           	psect	text15
  2241  027C                     __ptext15:	
  2242 ;; *************** function _init_oscillator *****************
  2243 ;; Defined at:
  2244 ;;		line 18 in file "init.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    2
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_init
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _init_oscillator
  2274  027C                     _init_oscillator:	
  2275  027C                     l899:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _init_oscillator: [wreg+status,2+status,0]
  2278                           
  2279                           
  2280                           ;init.c: 20:     OSCCONbits.SCS1 = 1;
  2281  027C  0021               	movlb	1	; select bank1
  2282  027D  1499               	bsf	25,1	;volatile
  2283  027E                     l901:	
  2284                           
  2285                           ;init.c: 21:     OSCCONbits.IRCF = 0b1110;
  2286  027E  0819               	movf	25,w	;volatile
  2287  027F  3987               	andlw	-121
  2288  0280  3870               	iorlw	112
  2289  0281  0099               	movwf	25	;volatile
  2290  0282                     l113:	
  2291  0282  0008               	return
  2292  0283                     __end_of_init_oscillator:	
  2293                           
  2294                           	psect	text16
  2295  0283                     __ptext16:	
  2296 ;; *************** function _init_interrupt *****************
  2297 ;; Defined at:
  2298 ;;		line 93 in file "init.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    3
  2319 ;; This function calls:
  2320 ;;		_init_interrupt_timer
  2321 ;; This function is called by:
  2322 ;;		_init
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _init_interrupt
  2328  0283                     _init_interrupt:	
  2329  0283                     l923:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _init_interrupt: [wreg+status,2+status,0+pclath+cstack]
  2332                           
  2333                           
  2334                           ;init.c: 95:     init_interrupt_timer ();
  2335  0283  3182  2256  3182   	fcall	_init_interrupt_timer
  2336  0286                     l925:	
  2337                           
  2338                           ;init.c: 98:     INTCONbits.GIE = 1;
  2339  0286  178B               	bsf	11,7	;volatile
  2340  0287                     l128:	
  2341  0287  0008               	return
  2342  0288                     __end_of_init_interrupt:	
  2343                           
  2344                           	psect	text17
  2345  0256                     __ptext17:	
  2346 ;; *************** function _init_interrupt_timer *****************
  2347 ;; Defined at:
  2348 ;;		line 102 in file "init.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_init_interrupt
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _init_interrupt_timer
  2378  0256                     _init_interrupt_timer:	
  2379  0256                     l885:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _init_interrupt_timer: [wreg+status,2+status,0]
  2382                           
  2383                           
  2384                           ;init.c: 105:     OPTION_REGbits.PSA = 0;
  2385  0256  0021               	movlb	1	; select bank1
  2386  0257  1195               	bcf	21,3	;volatile
  2387  0258                     l887:	
  2388                           
  2389                           ;init.c: 107:     OPTION_REGbits.PS = 0b100;
  2390  0258  0815               	movf	21,w	;volatile
  2391  0259  39F8               	andlw	-8
  2392  025A  3804               	iorlw	4
  2393  025B  0095               	movwf	21	;volatile
  2394  025C                     l889:	
  2395                           
  2396                           ;init.c: 110:     OPTION_REGbits.TMR0CS = 0;
  2397  025C  1295               	bcf	21,5	;volatile
  2398  025D                     l891:	
  2399                           
  2400                           ;init.c: 113:     OPTION_REGbits.TMR0SE = 0;
  2401  025D  1215               	bcf	21,4	;volatile
  2402  025E                     l893:	
  2403                           
  2404                           ;init.c: 117:     T0IE = 1;
  2405  025E  168B               	bsf	11,5	;volatile
  2406  025F                     l895:	
  2407                           
  2408                           ;init.c: 119:     TMR0 = 0;
  2409  025F  0020               	movlb	0	; select bank0
  2410  0260  0195               	clrf	21	;volatile
  2411  0261                     l131:	
  2412  0261  0008               	return
  2413  0262                     __end_of_init_interrupt_timer:	
  2414                           
  2415                           	psect	text18
  2416  01F5                     __ptext18:	
  2417 ;; *************** function _init_i2c *****************
  2418 ;; Defined at:
  2419 ;;		line 57 in file "init.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_init
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _init_i2c
  2449  01F5                     _init_i2c:	
  2450  01F5                     l905:	
  2451                           ;incstack = 0
  2452                           ; Regs used in _init_i2c: [wreg+status,2]
  2453                           
  2454                           
  2455                           ;init.c: 60:     TRISCbits.TRISC3 = 1;
  2456  01F5  0021               	movlb	1	; select bank1
  2457  01F6  158E               	bsf	14,3	;volatile
  2458                           
  2459                           ;init.c: 61:     TRISCbits.TRISC4 = 1;
  2460  01F7  160E               	bsf	14,4	;volatile
  2461  01F8                     l907:	
  2462                           
  2463                           ;init.c: 66:     SSPCON1 = 0b00110110;
  2464  01F8  3036               	movlw	54
  2465  01F9  0024               	movlb	4	; select bank4
  2466  01FA  0095               	movwf	21	;volatile
  2467                           
  2468                           ;init.c: 69:     SSPCON2 = 0x01;
  2469  01FB  3001               	movlw	1
  2470  01FC  0096               	movwf	22	;volatile
  2471  01FD                     l909:	
  2472                           
  2473                           ;init.c: 72:     SSPCON3 = 0x00;
  2474  01FD  0197               	clrf	23	;volatile
  2475  01FE                     l911:	
  2476                           
  2477                           ;init.c: 75:     SSPADD = 0x30;
  2478  01FE  3030               	movlw	48
  2479  01FF  0092               	movwf	18	;volatile
  2480  0200                     l913:	
  2481                           
  2482                           ;init.c: 78:     SSPSTAT = 0x80;
  2483  0200  3080               	movlw	128
  2484  0201  0094               	movwf	20	;volatile
  2485  0202                     l915:	
  2486                           
  2487                           ;init.c: 81:     INTCONbits.GIE = 1;
  2488  0202  178B               	bsf	11,7	;volatile
  2489  0203                     l917:	
  2490                           
  2491                           ;init.c: 84:     INTCONbits.PEIE = 1;
  2492  0203  170B               	bsf	11,6	;volatile
  2493  0204                     l919:	
  2494                           
  2495                           ;init.c: 87:     SSPIF = 0;
  2496  0204  0020               	movlb	0	; select bank0
  2497  0205  1191               	bcf	17,3	;volatile
  2498  0206                     l921:	
  2499                           
  2500                           ;init.c: 89:     SSPIE = 1;
  2501  0206  0021               	movlb	1	; select bank1
  2502  0207  1591               	bsf	17,3	;volatile
  2503  0208                     l125:	
  2504  0208  0008               	return
  2505  0209                     __end_of_init_i2c:	
  2506                           
  2507                           	psect	intentry
  2508  0004                     __pintentry:	
  2509 ;; *************** function _interruptHandler *****************
  2510 ;; Defined at:
  2511 ;;		line 7 in file "interrupt.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    1
  2532 ;; This function calls:
  2533 ;;		_on_interrupt_i2c
  2534 ;;		_on_interrupt_timer_0
  2535 ;; This function is called by:
  2536 ;;		Interrupt level 1
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540  0004                     _interruptHandler:	
  2541                           
  2542                           ;incstack = 0
  2543  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2544                           
  2545                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
  2546  0005  3180               	pagesel	$
  2547  0006                     i1l1177:	
  2548                           
  2549                           ;interrupt.c: 10:     if (SSPIE && SSPIF){
  2550  0006  0021               	movlb	1	; select bank1
  2551  0007  1D91               	btfss	17,3	;volatile
  2552  0008  280A               	goto	u59_21
  2553  0009  280B               	goto	u59_20
  2554  000A                     u59_21:	
  2555  000A  2813               	goto	i1l1183
  2556  000B                     u59_20:	
  2557  000B                     i1l1179:	
  2558  000B  0020               	movlb	0	; select bank0
  2559  000C  1D91               	btfss	17,3	;volatile
  2560  000D  280F               	goto	u60_21
  2561  000E  2810               	goto	u60_20
  2562  000F                     u60_21:	
  2563  000F  2813               	goto	i1l1183
  2564  0010                     u60_20:	
  2565  0010                     i1l1181:	
  2566                           
  2567                           ;interrupt.c: 11:         on_interrupt_i2c ();
  2568  0010  3180  2030  3180   	fcall	_on_interrupt_i2c
  2569  0013                     i1l1183:	
  2570                           
  2571                           ;interrupt.c: 15:     if (T0IE && T0IF){
  2572  0013  1E8B               	btfss	11,5	;volatile
  2573  0014  2816               	goto	u61_21
  2574  0015  2817               	goto	u61_20
  2575  0016                     u61_21:	
  2576  0016  281F               	goto	i1l156
  2577  0017                     u61_20:	
  2578  0017                     i1l1185:	
  2579  0017  1D0B               	btfss	11,2	;volatile
  2580  0018  281A               	goto	u62_21
  2581  0019  281B               	goto	u62_20
  2582  001A                     u62_21:	
  2583  001A  281F               	goto	i1l156
  2584  001B                     u62_20:	
  2585  001B                     i1l1187:	
  2586                           
  2587                           ;interrupt.c: 16:         on_interrupt_timer_0();
  2588  001B  3182  2289  3180   	fcall	_on_interrupt_timer_0
  2589  001E                     i1l1189:	
  2590                           
  2591                           ;interrupt.c: 17:         T0IF = 0;
  2592  001E  110B               	bcf	11,2	;volatile
  2593  001F                     i1l156:	
  2594  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2595  0020  0009               	retfie
  2596  0021                     __end_of_interruptHandler:	
  2597                           
  2598                           	psect	text20
  2599  0289                     __ptext20:	
  2600 ;; *************** function _on_interrupt_timer_0 *****************
  2601 ;; Defined at:
  2602 ;;		line 21 in file "interrupt.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		None
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_interruptHandler
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _on_interrupt_timer_0
  2631  0289                     _on_interrupt_timer_0:	
  2632  0289                     i1l159:	
  2633                           ;incstack = 0
  2634                           ; Regs used in _on_interrupt_timer_0: []
  2635                           
  2636  0289  0008               	return
  2637  028A                     __end_of_on_interrupt_timer_0:	
  2638                           
  2639                           	psect	text21
  2640  0030                     __ptext21:	
  2641 ;; *************** function _on_interrupt_i2c *****************
  2642 ;; Defined at:
  2643 ;;		line 8 in file "i2c_interrupt.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  bp_test_var     1    0        unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_interruptHandler
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _on_interrupt_i2c
  2672  0030                     _on_interrupt_i2c:	
  2673  0030                     i1l1127:	
  2674                           ;incstack = 0
  2675                           ; Regs used in _on_interrupt_i2c: [wreg+status,2]
  2676                           
  2677                           
  2678                           ;i2c_interrupt.c: 10:     SSPIF = 0;
  2679  0030  0020               	movlb	0	; select bank0
  2680  0031  1191               	bcf	17,3	;volatile
  2681                           
  2682                           ;i2c_interrupt.c: 11:     CKP = 0;
  2683  0032  0024               	movlb	4	; select bank4
  2684  0033  1215               	bcf	21,4	;volatile
  2685                           
  2686                           ;i2c_interrupt.c: 14:     if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
  2687  0034  1B15               	btfsc	21,6	;volatile
  2688  0035  2837               	goto	u43_21
  2689  0036  2838               	goto	u43_20
  2690  0037                     u43_21:	
  2691  0037  283C               	goto	i1l1131
  2692  0038                     u43_20:	
  2693  0038                     i1l1129:	
  2694  0038  1F95               	btfss	21,7	;volatile
  2695  0039  283B               	goto	u44_21
  2696  003A  283C               	goto	u44_20
  2697  003B                     u44_21:	
  2698  003B  2843               	goto	i1l1139
  2699  003C                     u44_20:	
  2700  003C                     i1l1131:	
  2701                           
  2702                           ;i2c_interrupt.c: 15:     {;i2c_interrupt.c: 16:       i2c_addr = SSPBUF;
  2703  003C  0811               	movf	17,w	;volatile
  2704  003D  00F0               	movwf	??_on_interrupt_i2c
  2705  003E  0870               	movf	??_on_interrupt_i2c,w
  2706  003F  00FB               	movwf	_i2c_addr
  2707  0040                     i1l1133:	
  2708                           
  2709                           ;i2c_interrupt.c: 17:       SSPCONbits.SSPOV = 0;
  2710  0040  1315               	bcf	21,6	;volatile
  2711  0041                     i1l1135:	
  2712                           
  2713                           ;i2c_interrupt.c: 18:       SSPCONbits.WCOL = 0;
  2714  0041  1395               	bcf	21,7	;volatile
  2715  0042                     i1l1137:	
  2716                           
  2717                           ;i2c_interrupt.c: 19:       SSPCONbits.CKP = 1;
  2718  0042  1615               	bsf	21,4	;volatile
  2719  0043                     i1l1139:	
  2720                           
  2721                           ;i2c_interrupt.c: 23:     if(!D_nA && !R_nW)
  2722  0043  1A94               	btfsc	20,5	;volatile
  2723  0044  2846               	goto	u45_21
  2724  0045  2847               	goto	u45_20
  2725  0046                     u45_21:	
  2726  0046  2854               	goto	i1l246
  2727  0047                     u45_20:	
  2728  0047                     i1l1141:	
  2729  0047  1914               	btfsc	20,2	;volatile
  2730  0048  284A               	goto	u46_21
  2731  0049  284B               	goto	u46_20
  2732  004A                     u46_21:	
  2733  004A  2854               	goto	i1l246
  2734  004B                     u46_20:	
  2735  004B                     i1l1143:	
  2736                           
  2737                           ;i2c_interrupt.c: 24:     {;i2c_interrupt.c: 25:         i2c_addr = SSPBUF;
  2738  004B  0811               	movf	17,w	;volatile
  2739  004C  00F0               	movwf	??_on_interrupt_i2c
  2740  004D  0870               	movf	??_on_interrupt_i2c,w
  2741  004E  00FB               	movwf	_i2c_addr
  2742  004F                     i1l247:	
  2743                           ;i2c_interrupt.c: 26:         while(BF);
  2744                           
  2745  004F  1814               	btfsc	20,0	;volatile
  2746  0050  2852               	goto	u47_21
  2747  0051  2853               	goto	u47_20
  2748  0052                     u47_21:	
  2749  0052  284F               	goto	i1l247
  2750  0053                     u47_20:	
  2751  0053                     i1l249:	
  2752                           
  2753                           ;i2c_interrupt.c: 27:         CKP = 1;
  2754  0053  1615               	bsf	21,4	;volatile
  2755  0054                     i1l246:	
  2756                           ;i2c_interrupt.c: 29:     }
  2757                           
  2758                           
  2759                           ;i2c_interrupt.c: 30:     if (D_nA && !R_nW)
  2760  0054  1E94               	btfss	20,5	;volatile
  2761  0055  2857               	goto	u48_21
  2762  0056  2858               	goto	u48_20
  2763  0057                     u48_21:	
  2764  0057  2865               	goto	i1l250
  2765  0058                     u48_20:	
  2766  0058                     i1l1145:	
  2767  0058  1914               	btfsc	20,2	;volatile
  2768  0059  285B               	goto	u49_21
  2769  005A  285C               	goto	u49_20
  2770  005B                     u49_21:	
  2771  005B  2865               	goto	i1l250
  2772  005C                     u49_20:	
  2773  005C                     i1l1147:	
  2774                           
  2775                           ;i2c_interrupt.c: 31:     {;i2c_interrupt.c: 32:         i2c_data = SSPBUF;
  2776  005C  0811               	movf	17,w	;volatile
  2777  005D  00F0               	movwf	??_on_interrupt_i2c
  2778  005E  0870               	movf	??_on_interrupt_i2c,w
  2779  005F  00FA               	movwf	_i2c_data
  2780  0060                     i1l251:	
  2781                           ;i2c_interrupt.c: 33:         while(BF);
  2782                           
  2783  0060  1814               	btfsc	20,0	;volatile
  2784  0061  2863               	goto	u50_21
  2785  0062  2864               	goto	u50_20
  2786  0063                     u50_21:	
  2787  0063  2860               	goto	i1l251
  2788  0064                     u50_20:	
  2789  0064                     i1l253:	
  2790                           
  2791                           ;i2c_interrupt.c: 34:         CKP = 1;
  2792  0064  1615               	bsf	21,4	;volatile
  2793  0065                     i1l250:	
  2794                           ;i2c_interrupt.c: 35:     }
  2795                           
  2796                           
  2797                           ;i2c_interrupt.c: 38:     if(!D_nA && R_nW)
  2798  0065  1A94               	btfsc	20,5	;volatile
  2799  0066  2868               	goto	u51_21
  2800  0067  2869               	goto	u51_20
  2801  0068                     u51_21:	
  2802  0068  288A               	goto	i1l254
  2803  0069                     u51_20:	
  2804  0069                     i1l1149:	
  2805  0069  1D14               	btfss	20,2	;volatile
  2806  006A  286C               	goto	u52_21
  2807  006B  286D               	goto	u52_20
  2808  006C                     u52_21:	
  2809  006C  288A               	goto	i1l254
  2810  006D                     u52_20:	
  2811  006D                     i1l1151:	
  2812                           
  2813                           ;i2c_interrupt.c: 39:     {;i2c_interrupt.c: 40:         i2c_addr = SSPBUF;
  2814  006D  0811               	movf	17,w	;volatile
  2815  006E  00F0               	movwf	??_on_interrupt_i2c
  2816  006F  0870               	movf	??_on_interrupt_i2c,w
  2817  0070  00FB               	movwf	_i2c_addr
  2818  0071                     i1l255:	
  2819                           ;i2c_interrupt.c: 41:         while(BF);
  2820                           
  2821  0071  1814               	btfsc	20,0	;volatile
  2822  0072  2874               	goto	u53_21
  2823  0073  2875               	goto	u53_20
  2824  0074                     u53_21:	
  2825  0074  2871               	goto	i1l255
  2826  0075                     u53_20:	
  2827  0075                     i1l1153:	
  2828                           
  2829                           ;i2c_interrupt.c: 42:         SSPBUF = 0x54;
  2830  0075  3054               	movlw	84
  2831  0076  0091               	movwf	17	;volatile
  2832  0077                     i1l258:	
  2833                           ;i2c_interrupt.c: 43:         while (SSPIF);
  2834                           
  2835  0077  0020               	movlb	0	; select bank0
  2836  0078  1991               	btfsc	17,3	;volatile
  2837  0079  287B               	goto	u54_21
  2838  007A  287C               	goto	u54_20
  2839  007B                     u54_21:	
  2840  007B  2877               	goto	i1l258
  2841  007C                     u54_20:	
  2842  007C  2884               	goto	i1l261
  2843  007D                     i1l1155:	
  2844                           
  2845                           ;i2c_interrupt.c: 46:             SSPBUF = 0x54;
  2846  007D  3054               	movlw	84
  2847  007E  0091               	movwf	17	;volatile
  2848  007F                     i1l263:	
  2849                           ;i2c_interrupt.c: 47:             while (SSPIF);
  2850                           
  2851  007F  0020               	movlb	0	; select bank0
  2852  0080  1991               	btfsc	17,3	;volatile
  2853  0081  2883               	goto	u55_21
  2854  0082  2884               	goto	u55_20
  2855  0083                     u55_21:	
  2856  0083  287F               	goto	i1l263
  2857  0084                     u55_20:	
  2858  0084                     i1l261:	
  2859                           ;i2c_interrupt.c: 48:         }
  2860                           
  2861                           
  2862                           ;i2c_interrupt.c: 45:         while (!ACKSTAT) {
  2863  0084  0024               	movlb	4	; select bank4
  2864  0085  1F16               	btfss	22,6	;volatile
  2865  0086  2888               	goto	u56_21
  2866  0087  2889               	goto	u56_20
  2867  0088                     u56_21:	
  2868  0088  287D               	goto	i1l1155
  2869  0089                     u56_20:	
  2870  0089                     i1l266:	
  2871                           
  2872                           ;i2c_interrupt.c: 49:         CKP = 1;
  2873  0089  1615               	bsf	21,4	;volatile
  2874  008A                     i1l254:	
  2875                           ;i2c_interrupt.c: 50:     }
  2876                           
  2877                           
  2878                           ;i2c_interrupt.c: 51:     if (D_nA && R_nW)
  2879  008A  1E94               	btfss	20,5	;volatile
  2880  008B  288D               	goto	u57_21
  2881  008C  288E               	goto	u57_20
  2882  008D                     u57_21:	
  2883  008D  2893               	goto	i1l1163
  2884  008E                     u57_20:	
  2885  008E                     i1l1157:	
  2886  008E  1D14               	btfss	20,2	;volatile
  2887  008F  2891               	goto	u58_21
  2888  0090  2892               	goto	u58_20
  2889  0091                     u58_21:	
  2890  0091  2893               	goto	i1l1163
  2891  0092                     u58_20:	
  2892  0092                     i1l1159:	
  2893  0092                     i1l1161:	
  2894                           
  2895                           ;i2c_interrupt.c: 54:         CKP = 1;
  2896  0092  1615               	bsf	21,4	;volatile
  2897  0093                     i1l1163:	
  2898                           
  2899                           ;i2c_interrupt.c: 59:     MASKED_I2C_PACKAGE = I2C_PACKAGE;
  2900  0093  0020               	movlb	0	; select bank0
  2901  0094  082B               	movf	_I2C_PACKAGE+1,w	;volatile
  2902  0095  00A9               	movwf	_MASKED_I2C_PACKAGE+1	;volatile
  2903  0096  082A               	movf	_I2C_PACKAGE,w	;volatile
  2904  0097  00A8               	movwf	_MASKED_I2C_PACKAGE	;volatile
  2905  0098                     i1l1165:	
  2906                           
  2907                           ;i2c_interrupt.c: 60:     I2C_PACKAGE.addr = i2c_addr;
  2908  0098  087B               	movf	_i2c_addr,w
  2909  0099  00F0               	movwf	??_on_interrupt_i2c
  2910  009A  0870               	movf	??_on_interrupt_i2c,w
  2911  009B  00AA               	movwf	_I2C_PACKAGE	;volatile
  2912  009C                     i1l1167:	
  2913                           
  2914                           ;i2c_interrupt.c: 61:     I2C_PACKAGE.data = i2c_data;
  2915  009C  087A               	movf	_i2c_data,w
  2916  009D  00F0               	movwf	??_on_interrupt_i2c
  2917  009E  0870               	movf	??_on_interrupt_i2c,w
  2918  009F  00AB               	movwf	_I2C_PACKAGE+1	;volatile
  2919  00A0                     i1l1169:	
  2920                           
  2921                           ;i2c_interrupt.c: 62:     INT_FLAGS.update_lcd_display = 1;
  2922  00A0  142D               	bsf	_INT_FLAGS,0	;volatile
  2923  00A1                     i1l268:	
  2924  00A1  0008               	return
  2925  00A2                     __end_of_on_interrupt_i2c:	
  2926  007E                     btemp	set	126	;btemp
  2927  007E                     int$flags	set	126
  2928  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      8      14
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    lcd_display_write_string@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_lcd_display_write_string
    _display_i2c_data->_lcd_display_write_string
    _lcd_display_write_string->_lcd_display_write_char
    _lcd_display_write_char->_lcd_display_port
    _lcd_display_set_cursor->_lcd_display_cmd
    _lcd_display_init->_lcd_display_cmd
    _lcd_display_clear->_lcd_display_cmd
    _lcd_display_cmd->_lcd_display_port

Critical Paths under _interruptHandler in COMMON

    _interruptHandler->_on_interrupt_i2c

Critical Paths under _main in BANK0

    _update_display->_display_i2c_data
    _display_i2c_data->_lcd_display_set_cursor

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3964
                               _init
                  _lcd_display_clear
                   _lcd_display_init
             _lcd_display_set_cursor
           _lcd_display_write_string
                 _update_if_flag_set
 ---------------------------------------------------------------------------------
 (1) _update_if_flag_set                                   0     0      0    2061
                     _update_display
 ---------------------------------------------------------------------------------
 (2) _update_display                                       0     0      0    2061
                   _display_i2c_data
 ---------------------------------------------------------------------------------
 (3) _display_i2c_data                                     4     2      2    2061
                                              4 BANK0      4     2      2
             _lcd_display_set_cursor
             _lcd_display_write_char
           _lcd_display_write_string
 ---------------------------------------------------------------------------------
 (4) _lcd_display_write_string                             5     3      2     564
                                              7 COMMON     3     1      2
                                              0 BANK0      2     2      0
             _lcd_display_write_char
 ---------------------------------------------------------------------------------
 (5) _lcd_display_write_char                               4     4      0     254
                                              3 COMMON     4     4      0
                   _lcd_display_port
 ---------------------------------------------------------------------------------
 (4) _lcd_display_set_cursor                               7     6      1     905
                                              5 COMMON     3     2      1
                                              0 BANK0      4     4      0
                    _lcd_display_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_display_init                                     1     1      0     279
                                              5 COMMON     1     1      0
                    _lcd_display_cmd
                   _lcd_display_port
 ---------------------------------------------------------------------------------
 (1) _lcd_display_clear                                    0     0      0     155
                    _lcd_display_cmd
 ---------------------------------------------------------------------------------
 (5) _lcd_display_cmd                                      2     2      0     155
                                              3 COMMON     2     2      0
                   _lcd_display_port
 ---------------------------------------------------------------------------------
 (6) _lcd_display_port                                     1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                           _init_i2c
                     _init_interrupt
                    _init_oscillator
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
                          _res_ports
                          _set_ports
 ---------------------------------------------------------------------------------
 (3) _set_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _res_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscillator                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
               _init_interrupt_timer
 ---------------------------------------------------------------------------------
 (3) _init_interrupt_timer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interruptHandler                                     0     0      0       1
                   _on_interrupt_i2c
               _on_interrupt_timer_0
 ---------------------------------------------------------------------------------
 (8) _on_interrupt_timer_0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _on_interrupt_i2c                                     2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_i2c
     _init_interrupt
       _init_interrupt_timer
     _init_oscillator
     _init_ports
       _res_ports
       _set_ports
   _lcd_display_clear
     _lcd_display_cmd
       _lcd_display_port
   _lcd_display_init
     _lcd_display_cmd
       _lcd_display_port
     _lcd_display_port
   _lcd_display_set_cursor
     _lcd_display_cmd
       _lcd_display_port
   _lcd_display_write_string
     _lcd_display_write_char
       _lcd_display_port
   _update_if_flag_set
     _update_display
       _display_i2c_data
         _lcd_display_set_cursor
           _lcd_display_cmd
             _lcd_display_port
         _lcd_display_write_char
           _lcd_display_port
         _lcd_display_write_string
           _lcd_display_write_char
             _lcd_display_port

 _interruptHandler (ROOT)
   _on_interrupt_i2c
   _on_interrupt_timer_0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       E       5       17.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 09 15:45:55 2020

                      __CFG_CP$OFF 0000                   ??_init_interrupt 0072  
                               _BF 10A0                                 l40 021B  
                               l43 0159                                 l37 026B  
                   _update_display 0209           __end_of_display_i2c_data 015A  
                              l110 0249                                l113 0282  
                              l122 0288                                l202 0185  
                              l131 0261                                l116 027B  
                              l125 0208                                l119 023C  
                              l128 0287                                l208 01C4  
                              l180 019D                                l182 01A4  
                              l190 0274                                l184 01A5  
                              l176 018E                                l178 0196  
                              l187 01F4                                l196 00EA  
                              l199 012D                                l901 027E  
                              l911 01FE                                l903 0275  
                              l921 0206                                l913 0200  
                              l905 01F5                                l915 0202  
                              l907 01F8                                l923 0283  
                              l931 0243                                l917 0203  
                              l909 01FD                                l925 0286  
                              l933 0246                                l919 0204  
                              l927 023D                                l929 0240  
                              l891 025D                                l883 022D  
                              l893 025E                                l885 0256  
                              l895 025F                                l887 0258  
                              l889 025C                                _CKP 10AC  
                              l899 027C                                u700 00CD  
                              u701 00CC                                u630 018B  
                              u631 018A                                u640 0194  
                              u720 01C4                                u641 0193  
                              u721 01C3                                u650 019B  
                              u730 0267                                u651 019A  
                              u715 00D5                                u731 0266  
                              u660 01A2                                u661 01A1  
                              u680 00A9                                u681 00A8  
                              u747 0174                                u675 016A  
                              u757 0180                                u767 00F2  
                              u695 00B1                                u777 00FD  
                              u787 0108                                u797 01ED  
                     __CFG_BORV$LO 0000                                wreg 0009  
                     __CFG_IESO$ON 0000                       __CFG_LVP$OFF 0000  
                             l1201 0194                               l1203 0197  
                             l1211 015B                               l1205 019B  
                             l1221 0177                               l1213 0165  
                             l1301 01C5                               l1207 019E  
                             l1231 01E2                               l1223 0179  
                             l1215 0167                               l1303 01D4  
                             l1209 01A2                               l1233 01E4  
                             l1241 00A4                               l1225 017D  
                             l1217 0171                               l1305 01DB  
                             l1235 01E8                               l1243 00A9  
                             l1251 00C7                               l1227 017F  
                             l1219 0173                               l1237 01EA  
                             l1253 00CD                               l1245 00B8  
                             l1229 0183                               l1261 01A6  
                             l1239 01F2                               l1255 00DC  
                             l1247 00BD                               l1263 01AA  
                             l1271 0136                               l1257 00E1  
                             l1249 00C1                               l1265 01B4  
                             l1273 013D                               l1281 0209  
                             l1195 0187                               l1291 0105  
                             l1283 00EB                               l1259 00E5  
                             l1267 01B9                               l1275 0146  
                             l1197 018B                               l1293 026C  
                             l1285 00EF                               l1277 014B  
                             l1269 0130                               l1199 0190  
                             l1287 00F6                               l1279 0154  
                             l1295 0262                               l1289 0101  
                             l1297 0267                               l1299 0268  
                             STR_1 024A                               STR_2 021C  
                             _T0IE 005D                               _T0IF 005A  
                             _LATA 010C                               _LATB 010D  
                             _LATC 010E                               _LATD 010F  
                             _TMR0 0015                               _D_nA 10A5  
         ??_lcd_display_write_char 0073                               _R_nW 10A2  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 01C5           __end_of_interruptHandler 0021  
                             _init 023D                               fsr0h 0005  
                             indf0 0000                               fsr0l 0004  
                             btemp 007E                  ??_init_oscillator 0072  
                    __CFG_BOREN$ON 0000      __size_of_init_interrupt_timer 000C  
                             start 0021                      __CFG_MCLRE$ON 0000  
        __size_of_lcd_display_init 0043          __size_of_lcd_display_port 0020  
           __end_of_update_display 021C                              ?_main 0070  
                            ?_init 0070                      __CFG_WDTE$OFF 0000  
                            _LATA0 0860                              _LATA1 0861  
                            _LATA2 0862                              _LATB0 0868  
                            _LATA3 0863                              _LATB1 0869  
                            i1l250 0065                              i1l251 0060  
                            i1l156 001F                              i1l261 0084  
                            i1l253 0064                              i1l254 008A  
                            i1l246 0054                              i1l263 007F  
                            i1l255 0071                              i1l247 004F  
                            i1l159 0289                              i1l249 0053  
                            i1l266 0089                              i1l258 0077  
                            i1l268 00A1                              u50_20 0064  
                            u50_21 0063                              u51_20 0069  
                            u43_20 0038                              u51_21 0068  
                            u43_21 0037                              u52_20 006D  
                            u44_20 003C                              u60_20 0010  
                            u52_21 006C                              u44_21 003B  
                            u60_21 000F                              u53_20 0075  
                            u45_20 0047                              u61_20 0017  
                            u53_21 0074                              u45_21 0046  
                            u61_21 0016                              u54_20 007C  
                            u46_20 004B                              u62_20 001B  
                            u54_21 007B                              u46_21 004A  
                            u62_21 001A                              u55_20 0084  
                            u47_20 0053                              u55_21 0083  
                            u47_21 0052                              u56_20 0089  
                            u48_20 0058                              u56_21 0088  
                            u48_21 0057                              u57_20 008E  
                            u49_20 005C                              u57_21 008D  
                            u49_21 005B                              _TRISA 008C  
                            _TRISB 008D                              _TRISC 008E  
                            _TRISD 008F                              _SSPIE 048B  
                            u58_20 0092                              _SSPIF 008B  
                            u58_21 0091                              u59_20 000B  
                            u59_21 000A    __size_of_lcd_display_set_cursor 0049  
        __size_of_on_interrupt_i2c 0072                              status 0003  
                            wtemp0 007E               _on_interrupt_timer_0 0289  
                  __initialization 0023                       __end_of_main 01E1  
                     __end_of_init 024A           _lcd_display_write_string 01A6  
                  ?_update_display 0070                     __CFG_LPBOR$OFF 0000  
                           ??_main 007A                             ??_init 0072  
                           _ANSELA 018C                             _ANSELB 018D  
                           _ANSELC 018E                             _ANSELD 018F  
                           i1l1131 003C                             i1l1141 0047  
                           i1l1133 0040                             i1l1151 006D  
                           i1l1143 004B                             i1l1135 0041  
                           i1l1127 0030                             i1l1161 0092  
                           i1l1153 0075                             i1l1145 0058  
                           i1l1137 0042                             i1l1129 0038  
                           i1l1163 0093                             i1l1155 007D  
                           i1l1147 005C                             i1l1139 0043  
                           i1l1165 0098                             i1l1157 008E  
                           i1l1149 0069                             i1l1181 0010  
                           i1l1167 009C                             i1l1159 0092  
                           i1l1183 0013                             i1l1169 00A0  
                           i1l1185 0017                             i1l1177 0006  
                           i1l1187 001B                             i1l1179 000B  
                           i1l1189 001E    __size_of_lcd_display_write_char 002C  
                           _SSPADD 0212                             _SSPBUF 0211  
            ?_on_interrupt_timer_0 0070                     __CFG_PWRTE$OFF 0000  
           _lcd_display_set_cursor 00A2                 _update_if_flag_set 0262  
                   __CFG_STVREN$ON 0000                   __end_of_init_i2c 0209  
              ?_update_if_flag_set 0070           __size_of_lcd_display_cmd 0014  
          __end_of__initialization 002C               ??_update_if_flag_set 007A  
                 _lcd_display_init 00EB                     __pcstackCOMMON 0070  
                 _lcd_display_port 0186         lcd_display_write_char@temp 0074  
           _lcd_display_write_char 015A                  ?_display_i2c_data 0024  
                   _OPTION_REGbits 0095                 ??_display_i2c_data 0026  
                  _init_oscillator 027C                         __pbssBANK0 0028  
                 _on_interrupt_i2c 0030                    __CFG_VCAPEN$OFF 0000  
           ??_on_interrupt_timer_0 0070                  ?_interruptHandler 0070  
               ??_interruptHandler 0072                         __pmaintext 01C5  
                       __pintentry 0004                            _ACKSTAT 10B6  
               __size_of_res_ports 0010       __end_of_init_interrupt_timer 0262  
               __size_of_set_ports 0001            lcd_display_set_cursor@a 0020  
          lcd_display_set_cursor@b 0075            lcd_display_set_cursor@y 0022  
          lcd_display_set_cursor@z 0021                            _SSPCON1 0215  
                          _SSPCON2 0216                            _SSPCON3 0217  
                          _SSPSTAT 0214                          ?_init_i2c 0070  
       ??_lcd_display_write_string 0079                  ??_lcd_display_cmd 0073  
                 ??_update_display 007A                  lcd_display_port@a 0072  
        lcd_display_write_string@a 0077          lcd_display_write_string@i 0020  
      display_i2c_data@i2c_package 0024            __end_of_init_oscillator 0283  
                       _init_ports 0275                            __ptext1 0262  
                          __ptext2 0209                            __ptext3 012E  
                          __ptext4 01A6                            __ptext5 015A  
                          __ptext6 00A2                            __ptext7 00EB  
                          __ptext8 026C                            __ptext9 01E1  
                          _display 002C            __size_of_init_interrupt 0005  
             end_of_initialization 002C                         ??_init_i2c 0072  
                __end_of_res_ports 023D                          _INT_FLAGS 002D  
          ?_lcd_display_set_cursor 0075                  __end_of_set_ports 0289  
                 __CFG_FOSC$INTOSC 0000                          _TRISCbits 008E  
         __end_of_lcd_display_init 012E           __end_of_lcd_display_port 01A6  
                      _I2C_PACKAGE 002A     __end_of_lcd_display_set_cursor 00EB  
             _init_interrupt_timer 0256                  _lcd_display_clear 026C  
          ?_lcd_display_write_char 0070                 ?_lcd_display_clear 0070  
                      ?_init_ports 0070                   ?_init_oscillator 0070  
         __end_of_on_interrupt_i2c 00A2                ??_lcd_display_clear 0075  
              start_initialization 0023   __end_of_lcd_display_write_string 01C5  
        __size_of_display_i2c_data 002C        __size_of_update_if_flag_set 000A  
            ?_init_interrupt_timer 0070          __end_of_lcd_display_clear 0275  
   __end_of_lcd_display_write_char 0186          __size_of_interruptHandler 001D  
                      __pbssCOMMON 007A                          ___latbits 0003  
                    __pcstackBANK0 0020                     _init_interrupt 0283  
                  _lcd_display_cmd 01E1                __size_of_init_ports 0007  
                __size_of_init_i2c 0014      __size_of_on_interrupt_timer_0 0001  
               _MASKED_I2C_PACKAGE 0028            lcd_display_write_char@a 0076  
          lcd_display_write_char@y 0075             __end_of_init_interrupt 0288  
                 lcd_display_cmd@a 0074         lcd_display_set_cursor@temp 0023  
           ??_init_interrupt_timer 0072         __size_of_lcd_display_clear 0009  
                        _res_ports 022D                          _set_ports 0288  
             display_i2c_data@line 0027  __size_of_lcd_display_write_string 001F  
          __end_of_lcd_display_cmd 01F5          ?_lcd_display_write_string 0077  
                  ?_init_interrupt 0070                  ?_lcd_display_init 0070  
                ?_lcd_display_port 0070                 ??_lcd_display_init 0075  
                         _i2c_addr 007B                 ??_lcd_display_port 0072  
                         _i2c_data 007A                   _display_i2c_data 012E  
                       ?_res_ports 0070                         ?_set_ports 0070  
                     ??_init_ports 0072            __size_of_update_display 0013  
                 _interruptHandler 0004                  ?_on_interrupt_i2c 0070  
               ??_on_interrupt_i2c 0070                           __ptext10 0186  
                         __ptext11 023D                           __ptext20 0289  
                         __ptext12 0275                           __ptext21 0030  
                         __ptext13 0288                           __ptext14 022D  
                         __ptext15 027C                           __ptext16 0283  
                         __ptext17 0256                           __ptext18 01F5  
                         _init_i2c 01F5                      __size_of_main 001C  
                    __size_of_init 000D                 __end_of_init_ports 027C  
                         int$flags 007E                   ?_lcd_display_cmd 0070  
                       _INTCONbits 000B           __size_of_init_oscillator 0007  
                         intlevel1 0000         __end_of_update_if_flag_set 026C  
                __CFG_CLKOUTEN$OFF 0000                         _OSCCONbits 0099  
                      ??_res_ports 0072                        ??_set_ports 0072  
                    __pstringtext1 021C                      __pstringtext2 024A  
                    __pstringtext3 0000       __end_of_on_interrupt_timer_0 028A  
         ??_lcd_display_set_cursor 0076                         _SSPCONbits 0215  
