

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 09 14:31:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1519
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.10
    35                           ; Generated 31/07/2019 GMT
    36                           ; 
    37                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F1519 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  018E                     	;# 
   124  018F                     	;# 
   125  0190                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020D                     	;# 
   147  0210                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  0FE4                     	;# 
   175  0FE5                     	;# 
   176  0FE6                     	;# 
   177  0FE7                     	;# 
   178  0FE8                     	;# 
   179  0FE9                     	;# 
   180  0FEA                     	;# 
   181  0FEB                     	;# 
   182  0FED                     	;# 
   183  0FEE                     	;# 
   184  0FEF                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0110                     	;# 
   235  0116                     	;# 
   236  0117                     	;# 
   237  011D                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  018E                     	;# 
   241  018F                     	;# 
   242  0190                     	;# 
   243  0191                     	;# 
   244  0191                     	;# 
   245  0192                     	;# 
   246  0193                     	;# 
   247  0193                     	;# 
   248  0194                     	;# 
   249  0195                     	;# 
   250  0196                     	;# 
   251  0197                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019C                     	;# 
   259  019C                     	;# 
   260  019D                     	;# 
   261  019E                     	;# 
   262  019F                     	;# 
   263  020D                     	;# 
   264  0210                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0214                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  0291                     	;# 
   281  0291                     	;# 
   282  0292                     	;# 
   283  0293                     	;# 
   284  0298                     	;# 
   285  0298                     	;# 
   286  0299                     	;# 
   287  029A                     	;# 
   288  0394                     	;# 
   289  0395                     	;# 
   290  0396                     	;# 
   291  0FE4                     	;# 
   292  0FE5                     	;# 
   293  0FE6                     	;# 
   294  0FE7                     	;# 
   295  0FE8                     	;# 
   296  0FE9                     	;# 
   297  0FEA                     	;# 
   298  0FEB                     	;# 
   299  0FED                     	;# 
   300  0FEE                     	;# 
   301  0FEF                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  0110                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018E                     	;# 
   358  018F                     	;# 
   359  0190                     	;# 
   360  0191                     	;# 
   361  0191                     	;# 
   362  0192                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0194                     	;# 
   366  0195                     	;# 
   367  0196                     	;# 
   368  0197                     	;# 
   369  0199                     	;# 
   370  019A                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019C                     	;# 
   376  019C                     	;# 
   377  019D                     	;# 
   378  019E                     	;# 
   379  019F                     	;# 
   380  020D                     	;# 
   381  0210                     	;# 
   382  0211                     	;# 
   383  0211                     	;# 
   384  0212                     	;# 
   385  0212                     	;# 
   386  0213                     	;# 
   387  0213                     	;# 
   388  0214                     	;# 
   389  0214                     	;# 
   390  0215                     	;# 
   391  0215                     	;# 
   392  0215                     	;# 
   393  0216                     	;# 
   394  0216                     	;# 
   395  0217                     	;# 
   396  0217                     	;# 
   397  0291                     	;# 
   398  0291                     	;# 
   399  0292                     	;# 
   400  0293                     	;# 
   401  0298                     	;# 
   402  0298                     	;# 
   403  0299                     	;# 
   404  029A                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  0FE4                     	;# 
   409  0FE5                     	;# 
   410  0FE6                     	;# 
   411  0FE7                     	;# 
   412  0FE8                     	;# 
   413  0FE9                     	;# 
   414  0FEA                     	;# 
   415  0FEB                     	;# 
   416  0FED                     	;# 
   417  0FEE                     	;# 
   418  0FEF                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  0110                     	;# 
   469  0116                     	;# 
   470  0117                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  018E                     	;# 
   475  018F                     	;# 
   476  0190                     	;# 
   477  0191                     	;# 
   478  0191                     	;# 
   479  0192                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0194                     	;# 
   483  0195                     	;# 
   484  0196                     	;# 
   485  0197                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020D                     	;# 
   498  0210                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0291                     	;# 
   515  0291                     	;# 
   516  0292                     	;# 
   517  0293                     	;# 
   518  0298                     	;# 
   519  0298                     	;# 
   520  0299                     	;# 
   521  029A                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0015                     _TMR0	set	21
   537  000B                     _INTCONbits	set	11
   538  005A                     _T0IF	set	90
   539  005D                     _T0IE	set	93
   540  008B                     _SSPIF	set	139
   541  0095                     _OPTION_REGbits	set	149
   542  008E                     _TRISCbits	set	142
   543  008F                     _TRISD	set	143
   544  008E                     _TRISC	set	142
   545  008D                     _TRISB	set	141
   546  008C                     _TRISA	set	140
   547  0099                     _OSCCONbits	set	153
   548  048B                     _SSPIE	set	1163
   549  010E                     _LATCbits	set	270
   550  010F                     _LATD	set	271
   551  010E                     _LATC	set	270
   552  010D                     _LATB	set	269
   553  010C                     _LATA	set	268
   554  0868                     _LATB0	set	2152
   555  0869                     _LATB1	set	2153
   556  0863                     _LATA3	set	2147
   557  0862                     _LATA2	set	2146
   558  0861                     _LATA1	set	2145
   559  0860                     _LATA0	set	2144
   560  018F                     _ANSELD	set	399
   561  018E                     _ANSELC	set	398
   562  018D                     _ANSELB	set	397
   563  018C                     _ANSELA	set	396
   564  0211                     _SSPBUF	set	529
   565  0215                     _SSPCONbits	set	533
   566  0214                     _SSPSTAT	set	532
   567  0212                     _SSPADD	set	530
   568  0217                     _SSPCON3	set	535
   569  0216                     _SSPCON2	set	534
   570  0215                     _SSPCON1	set	533
   571  10A0                     _BF	set	4256
   572  10A2                     _R_nW	set	4258
   573  10A5                     _D_nA	set	4261
   574  10AC                     _CKP	set	4268
   575                           
   576                           	psect	stringtext1
   577  025A                     __pstringtext1:	
   578  025A                     STR_1:	
   579  025A  3457               	retlw	87	;'W'
   580  025B  3461               	retlw	97	;'a'
   581  025C  3469               	retlw	105	;'i'
   582  025D  3474               	retlw	116	;'t'
   583  025E  3469               	retlw	105	;'i'
   584  025F  346E               	retlw	110	;'n'
   585  0260  3467               	retlw	103	;'g'
   586  0261  3420               	retlw	32	;' '
   587  0262  342E               	retlw	46	;'.'
   588  0263  342E               	retlw	46	;'.'
   589  0264  342E               	retlw	46	;'.'
   590  0265  3400               	retlw	0
   591                           
   592                           	psect	stringtext2
   593  0000                     __pstringtext2:	
   594                           
   595                           ; #config settings
   596  0000                     
   597                           	psect	cinit
   598  0023                     start_initialization:	
   599  0023                     __initialization:	
   600                           
   601                           ; Clear objects allocated to COMMON
   602  0023  01FB               	clrf	__pbssCOMMON& (0+127)
   603  0024  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   604                           
   605                           ; Clear objects allocated to BANK0
   606  0025  0020               	movlb	0	; select bank0
   607  0026  01A0               	clrf	__pbssBANK0& (0+127)
   608  0027  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   609  0028  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   610  0029  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   611  002A                     end_of_initialization:	
   612                           ;End of C runtime variable initialization code
   613                           
   614  002A                     __end_of__initialization:	
   615  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   616  002B  0020               	movlb	0
   617  002C  3181  29F9         	ljmp	_main	;jump to C main() function
   618                           
   619                           	psect	bssCOMMON
   620  007B                     __pbssCOMMON:	
   621  007B                     _i2c_data:	
   622  007B                     	ds	1
   623  007C                     _d:	
   624  007C                     	ds	1
   625                           
   626                           	psect	bssBANK0
   627  0020                     __pbssBANK0:	
   628  0020                     _I2C_VARS:	
   629  0020                     	ds	2
   630  0022                     _display:	
   631  0022                     	ds	1
   632  0023                     _INT_FLAGS:	
   633  0023                     	ds	1
   634                           
   635                           	psect	cstackCOMMON
   636  0070                     __pcstackCOMMON:	
   637  0070                     ?_init:	
   638  0070                     ?_lcd_display_init:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_lcd_display_clear:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_update_if_flag_set:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_update_display:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_lcd_display_write_char:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_init_oscillator:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_init_ports:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_init_i2c:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_init_interrupt:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_res_ports:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_set_ports:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_init_interrupt_timer:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_on_interrupt_i2c:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_on_interrupt_i2c:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_on_interrupt_timer_0:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_on_interrupt_timer_0:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_main:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_interruptHandler:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_lcd_display_port:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_lcd_display_cmd:	
   696                           ; 1 bytes @ 0x0
   697                           
   698                           
   699                           ; 1 bytes @ 0x0
   700  0070                     	ds	1
   701  0071                     ??_init:	
   702  0071                     ??_init_oscillator:	
   703                           ; 1 bytes @ 0x1
   704                           
   705  0071                     ??_init_ports:	
   706                           ; 1 bytes @ 0x1
   707                           
   708  0071                     ??_init_i2c:	
   709                           ; 1 bytes @ 0x1
   710                           
   711  0071                     ??_init_interrupt:	
   712                           ; 1 bytes @ 0x1
   713                           
   714  0071                     ??_res_ports:	
   715                           ; 1 bytes @ 0x1
   716                           
   717  0071                     ??_set_ports:	
   718                           ; 1 bytes @ 0x1
   719                           
   720  0071                     ??_init_interrupt_timer:	
   721                           ; 1 bytes @ 0x1
   722                           
   723  0071                     ??_interruptHandler:	
   724                           ; 1 bytes @ 0x1
   725                           
   726  0071                     ??_lcd_display_port:	
   727                           ; 1 bytes @ 0x1
   728                           
   729  0071                     lcd_display_port@a:	
   730                           ; 1 bytes @ 0x1
   731                           
   732                           
   733                           ; 1 bytes @ 0x1
   734  0071                     	ds	1
   735  0072                     ??_lcd_display_write_char:	
   736  0072                     ??_lcd_display_cmd:	
   737                           ; 1 bytes @ 0x2
   738                           
   739                           
   740                           ; 1 bytes @ 0x2
   741  0072                     	ds	1
   742  0073                     lcd_display_cmd@a:	
   743  0073                     lcd_display_write_char@temp:	
   744                           ; 1 bytes @ 0x3
   745                           
   746                           
   747                           ; 1 bytes @ 0x3
   748  0073                     	ds	1
   749  0074                     ??_lcd_display_init:	
   750  0074                     ??_lcd_display_clear:	
   751                           ; 1 bytes @ 0x4
   752                           
   753  0074                     ?_lcd_display_set_cursor:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     lcd_display_set_cursor@b:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     lcd_display_write_char@y:	
   760                           ; 1 bytes @ 0x4
   761                           
   762                           
   763                           ; 1 bytes @ 0x4
   764  0074                     	ds	1
   765  0075                     ??_lcd_display_set_cursor:	
   766  0075                     lcd_display_write_char@a:	
   767                           ; 1 bytes @ 0x5
   768                           
   769                           
   770                           ; 1 bytes @ 0x5
   771  0075                     	ds	1
   772  0076                     ?_lcd_display_write_string:	
   773  0076                     lcd_display_write_string@a:	
   774                           ; 1 bytes @ 0x6
   775                           
   776                           
   777                           ; 2 bytes @ 0x6
   778  0076                     	ds	1
   779  0077                     lcd_display_set_cursor@a:	
   780                           
   781                           ; 1 bytes @ 0x7
   782  0077                     	ds	1
   783  0078                     ??_lcd_display_write_string:	
   784  0078                     lcd_display_set_cursor@z:	
   785                           ; 1 bytes @ 0x8
   786                           
   787                           
   788                           ; 1 bytes @ 0x8
   789  0078                     	ds	1
   790  0079                     lcd_display_set_cursor@y:	
   791  0079                     lcd_display_write_string@i:	
   792                           ; 1 bytes @ 0x9
   793                           
   794                           
   795                           ; 2 bytes @ 0x9
   796  0079                     	ds	1
   797  007A                     lcd_display_set_cursor@temp:	
   798                           
   799                           ; 1 bytes @ 0xA
   800  007A                     	ds	1
   801  007B                     ??_update_if_flag_set:	
   802  007B                     ??_main:	
   803                           ; 1 bytes @ 0xB
   804                           
   805                           
   806                           	psect	cstackBANK0
   807  0024                     __pcstackBANK0:	
   808                           ; 1 bytes @ 0xB
   809                           
   810  0024                     ??_update_display:	
   811                           
   812                           ; 1 bytes @ 0x0
   813  0024                     	ds	1
   814  0025                     update_display@s:	
   815                           
   816                           ; 2 bytes @ 0x1
   817  0025                     	ds	2
   818                           
   819                           	psect	maintext
   820  01F9                     __pmaintext:	
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 16 in file "i2c_lcd_display_1519.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : B1F/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels required when called:    7
   846 ;; This function calls:
   847 ;;		_init
   848 ;;		_lcd_display_clear
   849 ;;		_lcd_display_init
   850 ;;		_lcd_display_set_cursor
   851 ;;		_lcd_display_write_string
   852 ;;		_update_if_flag_set
   853 ;; This function is called by:
   854 ;;		Startup code after reset
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _main
   860  01F9                     _main:	
   861  01F9                     l1197:	
   862                           ;incstack = 0
   863                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   864                           
   865                           
   866                           ;i2c_lcd_display_1519.c: 19:     init();
   867  01F9  3182  224D  3181   	fcall	_init
   868                           
   869                           ;i2c_lcd_display_1519.c: 21:     lcd_display_init();
   870  01FC  3181  214D  3181   	fcall	_lcd_display_init
   871                           
   872                           ;i2c_lcd_display_1519.c: 23:     lcd_display_clear();
   873  01FF  3182  227C  3181   	fcall	_lcd_display_clear
   874                           
   875                           ;i2c_lcd_display_1519.c: 24:     lcd_display_set_cursor(1,1);
   876  0202  01F4               	clrf	lcd_display_set_cursor@b
   877  0203  0AF4               	incf	lcd_display_set_cursor@b,f
   878  0204  3001               	movlw	1
   879  0205  3181  2107  3181   	fcall	_lcd_display_set_cursor
   880  0208                     l1199:	
   881                           
   882                           ;i2c_lcd_display_1519.c: 25:     lcd_display_write_string("Waiting ...");
   883  0208  305A               	movlw	low (STR_1| (0+32768))
   884  0209  00F6               	movwf	lcd_display_write_string@a
   885  020A  3082               	movlw	high (STR_1| (0+32768))
   886  020B  00F7               	movwf	lcd_display_write_string@a+1
   887  020C  3181  21DC  3181   	fcall	_lcd_display_write_string
   888  020F                     l1201:	
   889                           
   890                           ;i2c_lcd_display_1519.c: 29:         update_if_flag_set();
   891  020F  3182  2272  3181   	fcall	_update_if_flag_set
   892                           
   893                           ;i2c_lcd_display_1519.c: 30:     }
   894  0212  2A0F               	goto	l1201
   895  0213  3180  2821         	ljmp	start
   896  0215                     __end_of_main:	
   897                           
   898                           	psect	text1
   899  0272                     __ptext1:	
   900 ;; *************** function _update_if_flag_set *****************
   901 ;; Defined at:
   902 ;;		line 35 in file "i2c_lcd_display_1519.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    6
   923 ;; This function calls:
   924 ;;		_update_display
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _update_if_flag_set
   932  0272                     _update_if_flag_set:	
   933  0272                     l1191:	
   934                           ;incstack = 0
   935                           ; Regs used in _update_if_flag_set: [wreg+status,2+status,0+pclath+cstack]
   936                           
   937                           
   938                           ;i2c_lcd_display_1519.c: 37:     if (INT_FLAGS.update_lcd_display){
   939  0272  0020               	movlb	0	; select bank0
   940  0273  1C23               	btfss	_INT_FLAGS,0	;volatile
   941  0274  2A76               	goto	u591
   942  0275  2A77               	goto	u590
   943  0276                     u591:	
   944  0276  2A7B               	goto	l33
   945  0277                     u590:	
   946  0277                     l1193:	
   947                           
   948                           ;i2c_lcd_display_1519.c: 38:         INT_FLAGS.update_lcd_display = 0;
   949  0277  1023               	bcf	_INT_FLAGS,0	;volatile
   950  0278                     l1195:	
   951                           
   952                           ;i2c_lcd_display_1519.c: 39:         update_display();
   953  0278  3180  209E  3182   	fcall	_update_display
   954  027B                     l33:	
   955  027B  0008               	return
   956  027C                     __end_of_update_if_flag_set:	
   957                           
   958                           	psect	text2
   959  009E                     __ptext2:	
   960 ;; *************** function _update_display *****************
   961 ;; Defined at:
   962 ;;		line 43 in file "i2c_lcd_display_1519.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  s               2    1[BANK0 ] unsigned char [2]
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, pclath, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   979 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   980 ;;Total ram usage:        3 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    5
   983 ;; This function calls:
   984 ;;		_lcd_display_clear
   985 ;;		_lcd_display_set_cursor
   986 ;;		_lcd_display_write_char
   987 ;; This function is called by:
   988 ;;		_update_if_flag_set
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _update_display
   994  009E                     _update_display:	
   995  009E                     l1173:	
   996                           ;incstack = 0
   997                           ; Regs used in _update_display: [wreg+status,2+status,0+pclath+cstack]
   998                           
   999                           
  1000                           ;i2c_lcd_display_1519.c: 45:     char s[2];;i2c_lcd_display_1519.c: 46:     s[0] = (char
      +                          )(I2C_VARS.d & 0xFF);
  1001  009E  0020               	movlb	0	; select bank0
  1002  009F  0820               	movf	_I2C_VARS,w	;volatile
  1003  00A0  00A4               	movwf	??_update_display
  1004  00A1  0824               	movf	??_update_display,w
  1005  00A2  00A5               	movwf	update_display@s
  1006  00A3                     l1175:	
  1007                           
  1008                           ;i2c_lcd_display_1519.c: 47:     s[1] = (char)(I2C_VARS.d >> 8);
  1009  00A3  01A6               	clrf	update_display@s+1
  1010  00A4                     l1177:	
  1011                           
  1012                           ;i2c_lcd_display_1519.c: 48:     lcd_display_clear();
  1013  00A4  3182  227C  3180   	fcall	_lcd_display_clear
  1014  00A7                     l1179:	
  1015                           
  1016                           ;i2c_lcd_display_1519.c: 49:     lcd_display_set_cursor(1,1);
  1017  00A7  01F4               	clrf	lcd_display_set_cursor@b
  1018  00A8  0AF4               	incf	lcd_display_set_cursor@b,f
  1019  00A9  3001               	movlw	1
  1020  00AA  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1021  00AD                     l1181:	
  1022                           
  1023                           ;i2c_lcd_display_1519.c: 50:     lcd_display_write_char(s[0]);
  1024  00AD  0020               	movlb	0	; select bank0
  1025  00AE  0825               	movf	update_display@s,w
  1026  00AF  3181  2190  3180   	fcall	_lcd_display_write_char
  1027  00B2                     l1183:	
  1028                           
  1029                           ;i2c_lcd_display_1519.c: 51:     lcd_display_set_cursor(1,2);
  1030  00B2  3002               	movlw	2
  1031  00B3  0020               	movlb	0	; select bank0
  1032  00B4  00A4               	movwf	??_update_display
  1033  00B5  0824               	movf	??_update_display,w
  1034  00B6  00F4               	movwf	lcd_display_set_cursor@b
  1035  00B7  3001               	movlw	1
  1036  00B8  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1037  00BB                     l1185:	
  1038                           
  1039                           ;i2c_lcd_display_1519.c: 52:     lcd_display_write_char(s[1]);
  1040  00BB  0020               	movlb	0	; select bank0
  1041  00BC  0826               	movf	update_display@s+1,w
  1042  00BD  3181  2190  3180   	fcall	_lcd_display_write_char
  1043  00C0                     l1187:	
  1044                           
  1045                           ;i2c_lcd_display_1519.c: 54:     s[0] = (char)(I2C_VARS.data & 0xFF);
  1046  00C0  0020               	movlb	0	; select bank0
  1047  00C1  0821               	movf	_I2C_VARS+1,w	;volatile
  1048  00C2  00A4               	movwf	??_update_display
  1049  00C3  0824               	movf	??_update_display,w
  1050  00C4  00A5               	movwf	update_display@s
  1051  00C5                     l1189:	
  1052                           
  1053                           ;i2c_lcd_display_1519.c: 55:     s[1] = (char)(I2C_VARS.data >> 8);
  1054  00C5  01A6               	clrf	update_display@s+1
  1055                           
  1056                           ;i2c_lcd_display_1519.c: 56:     lcd_display_set_cursor(2,1);
  1057  00C6  01F4               	clrf	lcd_display_set_cursor@b
  1058  00C7  0AF4               	incf	lcd_display_set_cursor@b,f
  1059  00C8  3002               	movlw	2
  1060  00C9  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1061                           
  1062                           ;i2c_lcd_display_1519.c: 57:     lcd_display_write_char(s[0]);
  1063  00CC  0020               	movlb	0	; select bank0
  1064  00CD  0825               	movf	update_display@s,w
  1065  00CE  3181  2190  3180   	fcall	_lcd_display_write_char
  1066                           
  1067                           ;i2c_lcd_display_1519.c: 58:     lcd_display_set_cursor(2,2);
  1068  00D1  3002               	movlw	2
  1069  00D2  0020               	movlb	0	; select bank0
  1070  00D3  00A4               	movwf	??_update_display
  1071  00D4  0824               	movf	??_update_display,w
  1072  00D5  00F4               	movwf	lcd_display_set_cursor@b
  1073  00D6  3002               	movlw	2
  1074  00D7  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1075                           
  1076                           ;i2c_lcd_display_1519.c: 59:     lcd_display_write_char(s[1]);
  1077  00DA  0020               	movlb	0	; select bank0
  1078  00DB  0826               	movf	update_display@s+1,w
  1079  00DC  3181  2190  3180   	fcall	_lcd_display_write_char
  1080                           
  1081                           ;i2c_lcd_display_1519.c: 61:     lcd_display_set_cursor(2,5);
  1082  00DF  3005               	movlw	5
  1083  00E0  0020               	movlb	0	; select bank0
  1084  00E1  00A4               	movwf	??_update_display
  1085  00E2  0824               	movf	??_update_display,w
  1086  00E3  00F4               	movwf	lcd_display_set_cursor@b
  1087  00E4  3002               	movlw	2
  1088  00E5  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1089                           
  1090                           ;i2c_lcd_display_1519.c: 62:     lcd_display_write_char(0xF6);
  1091  00E8  30F6               	movlw	246
  1092  00E9  3181  2190  3180   	fcall	_lcd_display_write_char
  1093                           
  1094                           ;i2c_lcd_display_1519.c: 64:     lcd_display_set_cursor(1,5);
  1095  00EC  3005               	movlw	5
  1096  00ED  0020               	movlb	0	; select bank0
  1097  00EE  00A4               	movwf	??_update_display
  1098  00EF  0824               	movf	??_update_display,w
  1099  00F0  00F4               	movwf	lcd_display_set_cursor@b
  1100  00F1  3001               	movlw	1
  1101  00F2  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1102                           
  1103                           ;i2c_lcd_display_1519.c: 65:     lcd_display_write_char(0xFF);
  1104  00F5  30FF               	movlw	255
  1105  00F6  3181  2190  3180   	fcall	_lcd_display_write_char
  1106                           
  1107                           ;i2c_lcd_display_1519.c: 66:     lcd_display_set_cursor(1,6);
  1108  00F9  3006               	movlw	6
  1109  00FA  0020               	movlb	0	; select bank0
  1110  00FB  00A4               	movwf	??_update_display
  1111  00FC  0824               	movf	??_update_display,w
  1112  00FD  00F4               	movwf	lcd_display_set_cursor@b
  1113  00FE  3001               	movlw	1
  1114  00FF  3181  2107  3180   	fcall	_lcd_display_set_cursor
  1115                           
  1116                           ;i2c_lcd_display_1519.c: 67:     lcd_display_write_char(0x00);
  1117  0102  3000               	movlw	0
  1118  0103  3181  2190  3180   	fcall	_lcd_display_write_char
  1119  0106                     l36:	
  1120  0106  0008               	return
  1121  0107                     __end_of_update_display:	
  1122                           
  1123                           	psect	text3
  1124  0107                     __ptext3:	
  1125 ;; *************** function _lcd_display_set_cursor *****************
  1126 ;; Defined at:
  1127 ;;		line 44 in file "lcd_display.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  a               1    wreg     unsigned char 
  1130 ;;  b               1    4[COMMON] unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  a               1    7[COMMON] unsigned char 
  1133 ;;  temp            1   10[COMMON] unsigned char 
  1134 ;;  y               1    9[COMMON] unsigned char 
  1135 ;;  z               1    8[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1145 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1146 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1148 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1149 ;;Total ram usage:        7 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    4
  1152 ;; This function calls:
  1153 ;;		_lcd_display_cmd
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;;		_update_display
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _lcd_display_set_cursor
  1162  0107                     _lcd_display_set_cursor:	
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _lcd_display_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1166                           ;lcd_display_set_cursor@a stored from wreg
  1167  0107  00F7               	movwf	lcd_display_set_cursor@a
  1168  0108                     l1025:	
  1169                           
  1170                           ;lcd_display.c: 44: void lcd_display_set_cursor(char a, char b);lcd_display.c: 45: {;lcd
      +                          _display.c: 46:  char temp,z,y;;lcd_display.c: 47:  if(a == 1)
  1171  0108  0377               	decf	lcd_display_set_cursor@a,w
  1172  0109  1D03               	btfss	3,2
  1173  010A  290C               	goto	u341
  1174  010B  290D               	goto	u340
  1175  010C                     u341:	
  1176  010C  292A               	goto	l1035
  1177  010D                     u340:	
  1178  010D                     l1027:	
  1179                           
  1180                           ;lcd_display.c: 48:  {;lcd_display.c: 49:    temp = 0x80 + b - 1;
  1181  010D  0874               	movf	lcd_display_set_cursor@b,w
  1182  010E  3E7F               	addlw	127
  1183  010F  00F5               	movwf	??_lcd_display_set_cursor
  1184  0110  0875               	movf	??_lcd_display_set_cursor,w
  1185  0111  00FA               	movwf	lcd_display_set_cursor@temp
  1186                           
  1187                           ;lcd_display.c: 50:   z = temp>>4;
  1188  0112  087A               	movf	lcd_display_set_cursor@temp,w
  1189  0113  00F5               	movwf	??_lcd_display_set_cursor
  1190  0114  3004               	movlw	4
  1191  0115                     u355:	
  1192  0115  36F5               	lsrf	??_lcd_display_set_cursor,f
  1193  0116  0B89               	decfsz	9,f
  1194  0117  2915               	goto	u355
  1195  0118  0875               	movf	??_lcd_display_set_cursor,w
  1196  0119  00F6               	movwf	??_lcd_display_set_cursor+1
  1197  011A  0876               	movf	??_lcd_display_set_cursor+1,w
  1198  011B  00F8               	movwf	lcd_display_set_cursor@z
  1199  011C                     l1029:	
  1200                           
  1201                           ;lcd_display.c: 51:   y = temp & 0x0F;
  1202  011C  087A               	movf	lcd_display_set_cursor@temp,w
  1203  011D  390F               	andlw	15
  1204  011E  00F5               	movwf	??_lcd_display_set_cursor
  1205  011F  0875               	movf	??_lcd_display_set_cursor,w
  1206  0120  00F9               	movwf	lcd_display_set_cursor@y
  1207  0121                     l1031:	
  1208                           
  1209                           ;lcd_display.c: 52:   lcd_display_cmd(z);
  1210  0121  0878               	movf	lcd_display_set_cursor@z,w
  1211  0122  3182  2215  3181   	fcall	_lcd_display_cmd
  1212  0125                     l1033:	
  1213                           
  1214                           ;lcd_display.c: 53:   lcd_display_cmd(y);
  1215  0125  0879               	movf	lcd_display_set_cursor@y,w
  1216  0126  3182  2215  3181   	fcall	_lcd_display_cmd
  1217                           
  1218                           ;lcd_display.c: 54:  }
  1219  0129  294C               	goto	l227
  1220  012A                     l1035:	
  1221  012A  3002               	movlw	2
  1222  012B  0677               	xorwf	lcd_display_set_cursor@a,w
  1223  012C  1D03               	btfss	3,2
  1224  012D  292F               	goto	u361
  1225  012E  2930               	goto	u360
  1226  012F                     u361:	
  1227  012F  294C               	goto	l227
  1228  0130                     u360:	
  1229  0130                     l1037:	
  1230                           
  1231                           ;lcd_display.c: 56:  {;lcd_display.c: 57:   temp = 0xC0 + b - 1;
  1232  0130  0874               	movf	lcd_display_set_cursor@b,w
  1233  0131  3EBF               	addlw	191
  1234  0132  00F5               	movwf	??_lcd_display_set_cursor
  1235  0133  0875               	movf	??_lcd_display_set_cursor,w
  1236  0134  00FA               	movwf	lcd_display_set_cursor@temp
  1237                           
  1238                           ;lcd_display.c: 58:   z = temp>>4;
  1239  0135  087A               	movf	lcd_display_set_cursor@temp,w
  1240  0136  00F5               	movwf	??_lcd_display_set_cursor
  1241  0137  3004               	movlw	4
  1242  0138                     u375:	
  1243  0138  36F5               	lsrf	??_lcd_display_set_cursor,f
  1244  0139  0B89               	decfsz	9,f
  1245  013A  2938               	goto	u375
  1246  013B  0875               	movf	??_lcd_display_set_cursor,w
  1247  013C  00F6               	movwf	??_lcd_display_set_cursor+1
  1248  013D  0876               	movf	??_lcd_display_set_cursor+1,w
  1249  013E  00F8               	movwf	lcd_display_set_cursor@z
  1250  013F                     l1039:	
  1251                           
  1252                           ;lcd_display.c: 59:   y = temp & 0x0F;
  1253  013F  087A               	movf	lcd_display_set_cursor@temp,w
  1254  0140  390F               	andlw	15
  1255  0141  00F5               	movwf	??_lcd_display_set_cursor
  1256  0142  0875               	movf	??_lcd_display_set_cursor,w
  1257  0143  00F9               	movwf	lcd_display_set_cursor@y
  1258  0144                     l1041:	
  1259                           
  1260                           ;lcd_display.c: 60:   lcd_display_cmd(z);
  1261  0144  0878               	movf	lcd_display_set_cursor@z,w
  1262  0145  3182  2215  3181   	fcall	_lcd_display_cmd
  1263  0148                     l1043:	
  1264                           
  1265                           ;lcd_display.c: 61:   lcd_display_cmd(y);
  1266  0148  0879               	movf	lcd_display_set_cursor@y,w
  1267  0149  3182  2215  3181   	fcall	_lcd_display_cmd
  1268  014C                     l227:	
  1269  014C  0008               	return
  1270  014D                     __end_of_lcd_display_set_cursor:	
  1271                           
  1272                           	psect	text4
  1273  027C                     __ptext4:	
  1274 ;; *************** function _lcd_display_clear *****************
  1275 ;; Defined at:
  1276 ;;		line 38 in file "lcd_display.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    4
  1297 ;; This function calls:
  1298 ;;		_lcd_display_cmd
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;;		_update_display
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           
  1306                           ;psect for function _lcd_display_clear
  1307  027C                     _lcd_display_clear:	
  1308  027C                     l1023:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _lcd_display_clear: [wreg+status,2+status,0+pclath+cstack]
  1311                           
  1312                           
  1313                           ;lcd_display.c: 40:  lcd_display_cmd(0);
  1314  027C  3000               	movlw	0
  1315  027D  3182  2215  3182   	fcall	_lcd_display_cmd
  1316                           
  1317                           ;lcd_display.c: 41:  lcd_display_cmd(1);
  1318  0280  3001               	movlw	1
  1319  0281  3182  2215  3182   	fcall	_lcd_display_cmd
  1320  0284                     l221:	
  1321  0284  0008               	return
  1322  0285                     __end_of_lcd_display_clear:	
  1323                           
  1324                           	psect	text5
  1325  01DC                     __ptext5:	
  1326 ;; *************** function _lcd_display_write_string *****************
  1327 ;; Defined at:
  1328 ;;		line 100 in file "lcd_display.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  a               2    6[COMMON] PTR unsigned char 
  1331 ;;		 -> STR_1(12), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  i               2    9[COMMON] int 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1347 ;;Total ram usage:        5 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    4
  1350 ;; This function calls:
  1351 ;;		_lcd_display_write_char
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _lcd_display_write_string
  1359  01DC                     _lcd_display_write_string:	
  1360  01DC                     l1093:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _lcd_display_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1363                           
  1364                           
  1365                           ;lcd_display.c: 100: void lcd_display_write_string(char *a);lcd_display.c: 101: {;lcd_di
      +                          splay.c: 102:  int i;;lcd_display.c: 103:  for(i=0;a[i]!='\0';i++)
  1366  01DC  01F9               	clrf	lcd_display_write_string@i
  1367  01DD  01FA               	clrf	lcd_display_write_string@i+1
  1368  01DE  29ED               	goto	l1099
  1369  01DF                     l1095:	
  1370                           
  1371                           ;lcd_display.c: 104:     lcd_display_write_char(a[i]);
  1372  01DF  0876               	movf	lcd_display_write_string@a,w
  1373  01E0  0779               	addwf	lcd_display_write_string@i,w
  1374  01E1  0084               	movwf	4
  1375  01E2  0877               	movf	lcd_display_write_string@a+1,w
  1376  01E3  3D7A               	addwfc	lcd_display_write_string@i+1,w
  1377  01E4  0085               	movwf	5
  1378  01E5  0800               	movf	0,w	;code access
  1379  01E6  3181  2190  3181   	fcall	_lcd_display_write_char
  1380  01E9                     l1097:	
  1381  01E9  3001               	movlw	1
  1382  01EA  07F9               	addwf	lcd_display_write_string@i,f
  1383  01EB  3000               	movlw	0
  1384  01EC  3DFA               	addwfc	lcd_display_write_string@i+1,f
  1385  01ED                     l1099:	
  1386  01ED  0876               	movf	lcd_display_write_string@a,w
  1387  01EE  0779               	addwf	lcd_display_write_string@i,w
  1388  01EF  0084               	movwf	4
  1389  01F0  0877               	movf	lcd_display_write_string@a+1,w
  1390  01F1  3D7A               	addwfc	lcd_display_write_string@i+1,w
  1391  01F2  0085               	movwf	5
  1392  01F3  0012               	moviw fsr0++
  1393  01F4  1D03               	btfss	3,2
  1394  01F5  29F7               	goto	u391
  1395  01F6  29F8               	goto	u390
  1396  01F7                     u391:	
  1397  01F7  29DF               	goto	l1095
  1398  01F8                     u390:	
  1399  01F8                     l239:	
  1400  01F8  0008               	return
  1401  01F9                     __end_of_lcd_display_write_string:	
  1402                           
  1403                           	psect	text6
  1404  0190                     __ptext6:	
  1405 ;; *************** function _lcd_display_write_char *****************
  1406 ;; Defined at:
  1407 ;;		line 84 in file "lcd_display.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  a               1    wreg     unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  a               1    5[COMMON] unsigned char 
  1412 ;;  y               1    4[COMMON] unsigned char 
  1413 ;;  temp            1    3[COMMON] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1424 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1427 ;;Total ram usage:        4 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    3
  1430 ;; This function calls:
  1431 ;;		_lcd_display_port
  1432 ;; This function is called by:
  1433 ;;		_update_display
  1434 ;;		_lcd_display_write_string
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _lcd_display_write_char
  1440  0190                     _lcd_display_write_char:	
  1441                           
  1442                           ;incstack = 0
  1443                           ; Regs used in _lcd_display_write_char: [wreg+status,2+status,0+pclath+cstack]
  1444                           ;lcd_display_write_char@a stored from wreg
  1445  0190  00F5               	movwf	lcd_display_write_char@a
  1446  0191                     l1045:	
  1447                           
  1448                           ;lcd_display.c: 84: void lcd_display_write_char(char a);lcd_display.c: 85: {;lcd_display
      +                          .c: 86:     char temp,y;;lcd_display.c: 87:     temp = a&0x0F;
  1449  0191  0875               	movf	lcd_display_write_char@a,w
  1450  0192  390F               	andlw	15
  1451  0193  00F2               	movwf	??_lcd_display_write_char
  1452  0194  0872               	movf	??_lcd_display_write_char,w
  1453  0195  00F3               	movwf	lcd_display_write_char@temp
  1454                           
  1455                           ;lcd_display.c: 88:     y = a&0xF0;
  1456  0196  0875               	movf	lcd_display_write_char@a,w
  1457  0197  39F0               	andlw	240
  1458  0198  00F2               	movwf	??_lcd_display_write_char
  1459  0199  0872               	movf	??_lcd_display_write_char,w
  1460  019A  00F4               	movwf	lcd_display_write_char@y
  1461  019B                     l1047:	
  1462                           
  1463                           ;lcd_display.c: 89:     LATB1 = 1;
  1464  019B  0022               	movlb	2	; select bank2
  1465  019C  148D               	bsf	13,1	;volatile
  1466  019D                     l1049:	
  1467                           
  1468                           ;lcd_display.c: 90:     lcd_display_port(y>>4);
  1469  019D  0874               	movf	lcd_display_write_char@y,w
  1470  019E  00F2               	movwf	??_lcd_display_write_char
  1471  019F  3004               	movlw	4
  1472  01A0                     u385:	
  1473  01A0  36F2               	lsrf	??_lcd_display_write_char,f
  1474  01A1  0B89               	decfsz	9,f
  1475  01A2  29A0               	goto	u385
  1476  01A3  0872               	movf	??_lcd_display_write_char,w
  1477  01A4  3181  21BC  3181   	fcall	_lcd_display_port
  1478  01A7                     l1051:	
  1479                           
  1480                           ;lcd_display.c: 91:     LATB0 = 1;
  1481  01A7  0022               	movlb	2	; select bank2
  1482  01A8  140D               	bsf	13,0	;volatile
  1483  01A9                     l1053:	
  1484                           
  1485                           ;lcd_display.c: 92:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1486  01A9  301A               	movlw	26
  1487  01AA                     u607:	
  1488  01AA  0B89               	decfsz	9,f
  1489  01AB  29AA               	goto	u607
  1490  01AC  3200               	nop2
  1491  01AD                     l1055:	
  1492                           
  1493                           ;lcd_display.c: 93:     LATB0 = 0;
  1494  01AD  0022               	movlb	2	; select bank2
  1495  01AE  100D               	bcf	13,0	;volatile
  1496  01AF                     l1057:	
  1497                           
  1498                           ;lcd_display.c: 94:     lcd_display_port(temp);
  1499  01AF  0873               	movf	lcd_display_write_char@temp,w
  1500  01B0  3181  21BC  3181   	fcall	_lcd_display_port
  1501  01B3                     l1059:	
  1502                           
  1503                           ;lcd_display.c: 95:     LATB0 = 1;
  1504  01B3  0022               	movlb	2	; select bank2
  1505  01B4  140D               	bsf	13,0	;volatile
  1506  01B5                     l1061:	
  1507                           
  1508                           ;lcd_display.c: 96:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1509  01B5  301A               	movlw	26
  1510  01B6                     u617:	
  1511  01B6  0B89               	decfsz	9,f
  1512  01B7  29B6               	goto	u617
  1513  01B8  3200               	nop2
  1514  01B9                     l1063:	
  1515                           
  1516                           ;lcd_display.c: 97:     LATB0 = 0;
  1517  01B9  0022               	movlb	2	; select bank2
  1518  01BA  100D               	bcf	13,0	;volatile
  1519  01BB                     l233:	
  1520  01BB  0008               	return
  1521  01BC                     __end_of_lcd_display_write_char:	
  1522                           
  1523                           	psect	text7
  1524  014D                     __ptext7:	
  1525 ;; *************** function _lcd_display_init *****************
  1526 ;; Defined at:
  1527 ;;		line 65 in file "lcd_display.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1545 ;;Total ram usage:        1 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    4
  1548 ;; This function calls:
  1549 ;;		_lcd_display_cmd
  1550 ;;		_lcd_display_port
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _lcd_display_init
  1558  014D                     _lcd_display_init:	
  1559  014D                     l1083:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _lcd_display_init: [wreg+status,2+status,0+pclath+cstack]
  1562                           
  1563                           
  1564                           ;lcd_display.c: 67:     lcd_display_port(0x00);
  1565  014D  3000               	movlw	0
  1566  014E  3181  21BC  3181   	fcall	_lcd_display_port
  1567  0151                     l1085:	
  1568                           
  1569                           ;lcd_display.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1570  0151  3034               	movlw	52
  1571  0152  00F4               	movwf	??_lcd_display_init
  1572  0153  30F2               	movlw	242
  1573  0154                     u627:	
  1574  0154  0B89               	decfsz	9,f
  1575  0155  2954               	goto	u627
  1576  0156  0BF4               	decfsz	??_lcd_display_init,f
  1577  0157  2954               	goto	u627
  1578  0158                     l1087:	
  1579                           
  1580                           ;lcd_display.c: 69:     lcd_display_cmd(0x03);
  1581  0158  3003               	movlw	3
  1582  0159  3182  2215  3181   	fcall	_lcd_display_cmd
  1583                           
  1584                           ;lcd_display.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1585  015C  300D               	movlw	13
  1586  015D  00F4               	movwf	??_lcd_display_init
  1587  015E  30FC               	movlw	252
  1588  015F                     u637:	
  1589  015F  0B89               	decfsz	9,f
  1590  0160  295F               	goto	u637
  1591  0161  0BF4               	decfsz	??_lcd_display_init,f
  1592  0162  295F               	goto	u637
  1593  0163                     l1089:	
  1594                           
  1595                           ;lcd_display.c: 71:     lcd_display_cmd(0x03);
  1596  0163  3003               	movlw	3
  1597  0164  3182  2215  3181   	fcall	_lcd_display_cmd
  1598  0167                     l1091:	
  1599                           
  1600                           ;lcd_display.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1601  0167  301D               	movlw	29
  1602  0168  00F4               	movwf	??_lcd_display_init
  1603  0169  3091               	movlw	145
  1604  016A                     u647:	
  1605  016A  0B89               	decfsz	9,f
  1606  016B  296A               	goto	u647
  1607  016C  0BF4               	decfsz	??_lcd_display_init,f
  1608  016D  296A               	goto	u647
  1609  016E  0000               	nop
  1610                           
  1611                           ;lcd_display.c: 73:     lcd_display_cmd(0x03);
  1612  016F  3003               	movlw	3
  1613  0170  3182  2215  3181   	fcall	_lcd_display_cmd
  1614                           
  1615                           ;lcd_display.c: 75:     lcd_display_cmd(0x02);
  1616  0173  3002               	movlw	2
  1617  0174  3182  2215  3181   	fcall	_lcd_display_cmd
  1618                           
  1619                           ;lcd_display.c: 76:     lcd_display_cmd(0x02);
  1620  0177  3002               	movlw	2
  1621  0178  3182  2215  3181   	fcall	_lcd_display_cmd
  1622                           
  1623                           ;lcd_display.c: 77:     lcd_display_cmd(0x08);
  1624  017B  3008               	movlw	8
  1625  017C  3182  2215  3181   	fcall	_lcd_display_cmd
  1626                           
  1627                           ;lcd_display.c: 78:     lcd_display_cmd(0x00);
  1628  017F  3000               	movlw	0
  1629  0180  3182  2215  3181   	fcall	_lcd_display_cmd
  1630                           
  1631                           ;lcd_display.c: 79:     lcd_display_cmd(0x0C);
  1632  0183  300C               	movlw	12
  1633  0184  3182  2215  3181   	fcall	_lcd_display_cmd
  1634                           
  1635                           ;lcd_display.c: 80:     lcd_display_cmd(0x00);
  1636  0187  3000               	movlw	0
  1637  0188  3182  2215  3181   	fcall	_lcd_display_cmd
  1638                           
  1639                           ;lcd_display.c: 81:     lcd_display_cmd(0x06);
  1640  018B  3006               	movlw	6
  1641  018C  3182  2215  3181   	fcall	_lcd_display_cmd
  1642  018F                     l230:	
  1643  018F  0008               	return
  1644  0190                     __end_of_lcd_display_init:	
  1645                           
  1646                           	psect	text8
  1647  0215                     __ptext8:	
  1648 ;; *************** function _lcd_display_cmd *****************
  1649 ;; Defined at:
  1650 ;;		line 29 in file "lcd_display.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  a               1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  a               1    3[COMMON] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		_lcd_display_port
  1673 ;; This function is called by:
  1674 ;;		_lcd_display_clear
  1675 ;;		_lcd_display_set_cursor
  1676 ;;		_lcd_display_init
  1677 ;;		_lcd_display_shift_right
  1678 ;;		_lcd_display_shift_left
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _lcd_display_cmd
  1684  0215                     _lcd_display_cmd:	
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _lcd_display_cmd: [wreg+status,2+status,0+pclath+cstack]
  1688                           ;lcd_display_cmd@a stored from wreg
  1689  0215  00F3               	movwf	lcd_display_cmd@a
  1690  0216                     l1013:	
  1691                           
  1692                           ;lcd_display.c: 29: void lcd_display_cmd(char a);lcd_display.c: 30: {;lcd_display.c: 31:
      +                               LATB1 = 0;
  1693  0216  0022               	movlb	2	; select bank2
  1694  0217  108D               	bcf	13,1	;volatile
  1695  0218                     l1015:	
  1696                           
  1697                           ;lcd_display.c: 32:  lcd_display_port(a);
  1698  0218  0873               	movf	lcd_display_cmd@a,w
  1699  0219  3181  21BC  3182   	fcall	_lcd_display_port
  1700  021C                     l1017:	
  1701                           
  1702                           ;lcd_display.c: 33:  LATB0 = 1;
  1703  021C  0022               	movlb	2	; select bank2
  1704  021D  140D               	bsf	13,0	;volatile
  1705  021E                     l1019:	
  1706                           
  1707                           ;lcd_display.c: 34:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1708  021E  300B               	movlw	11
  1709  021F  00F2               	movwf	??_lcd_display_cmd
  1710  0220  3062               	movlw	98
  1711  0221                     u657:	
  1712  0221  0B89               	decfsz	9,f
  1713  0222  2A21               	goto	u657
  1714  0223  0BF2               	decfsz	??_lcd_display_cmd,f
  1715  0224  2A21               	goto	u657
  1716  0225  3200               	nop2
  1717  0226                     l1021:	
  1718                           
  1719                           ;lcd_display.c: 35:     LATB0 = 0;
  1720  0226  0022               	movlb	2	; select bank2
  1721  0227  100D               	bcf	13,0	;volatile
  1722  0228                     l218:	
  1723  0228  0008               	return
  1724  0229                     __end_of_lcd_display_cmd:	
  1725                           
  1726                           	psect	text9
  1727  01BC                     __ptext9:	
  1728 ;; *************** function _lcd_display_port *****************
  1729 ;; Defined at:
  1730 ;;		line 6 in file "lcd_display.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  a               1    wreg     unsigned char 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  a               1    1[COMMON] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;Total ram usage:        1 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    2
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_lcd_display_cmd
  1755 ;;		_lcd_display_init
  1756 ;;		_lcd_display_write_char
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _lcd_display_port
  1762  01BC                     _lcd_display_port:	
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _lcd_display_port: [wreg]
  1766                           ;lcd_display_port@a stored from wreg
  1767  01BC  00F1               	movwf	lcd_display_port@a
  1768  01BD                     l997:	
  1769                           
  1770                           ;lcd_display.c: 6: void lcd_display_port(char a);lcd_display.c: 7: {;lcd_display.c: 8:  
      +                          if(a & 1)
  1771  01BD  1C71               	btfss	lcd_display_port@a,0
  1772  01BE  29C0               	goto	u301
  1773  01BF  29C1               	goto	u300
  1774  01C0                     u301:	
  1775  01C0  29C4               	goto	l207
  1776  01C1                     u300:	
  1777  01C1                     l999:	
  1778                           
  1779                           ;lcd_display.c: 9:   LATA0 = 1;
  1780  01C1  0022               	movlb	2	; select bank2
  1781  01C2  140C               	bsf	12,0	;volatile
  1782  01C3  29C6               	goto	l1001
  1783  01C4                     l207:	
  1784                           ;lcd_display.c: 10:  else
  1785                           
  1786                           
  1787                           ;lcd_display.c: 11:   LATA0 = 0;
  1788  01C4  0022               	movlb	2	; select bank2
  1789  01C5  100C               	bcf	12,0	;volatile
  1790  01C6                     l1001:	
  1791                           
  1792                           ;lcd_display.c: 13:  if(a & 2)
  1793  01C6  1CF1               	btfss	lcd_display_port@a,1
  1794  01C7  29C9               	goto	u311
  1795  01C8  29CA               	goto	u310
  1796  01C9                     u311:	
  1797  01C9  29CC               	goto	l209
  1798  01CA                     u310:	
  1799  01CA                     l1003:	
  1800                           
  1801                           ;lcd_display.c: 14:   LATA1 = 1;
  1802  01CA  148C               	bsf	12,1	;volatile
  1803  01CB  29CD               	goto	l1005
  1804  01CC                     l209:	
  1805                           ;lcd_display.c: 15:  else
  1806                           
  1807                           
  1808                           ;lcd_display.c: 16:   LATA1 = 0;
  1809  01CC  108C               	bcf	12,1	;volatile
  1810  01CD                     l1005:	
  1811                           
  1812                           ;lcd_display.c: 18:  if(a & 4)
  1813  01CD  1D71               	btfss	lcd_display_port@a,2
  1814  01CE  29D0               	goto	u321
  1815  01CF  29D1               	goto	u320
  1816  01D0                     u321:	
  1817  01D0  29D3               	goto	l211
  1818  01D1                     u320:	
  1819  01D1                     l1007:	
  1820                           
  1821                           ;lcd_display.c: 19:   LATA2 = 1;
  1822  01D1  150C               	bsf	12,2	;volatile
  1823  01D2  29D4               	goto	l1009
  1824  01D3                     l211:	
  1825                           ;lcd_display.c: 20:  else
  1826                           
  1827                           
  1828                           ;lcd_display.c: 21:   LATA2 = 0;
  1829  01D3  110C               	bcf	12,2	;volatile
  1830  01D4                     l1009:	
  1831                           
  1832                           ;lcd_display.c: 23:  if(a & 8)
  1833  01D4  1DF1               	btfss	lcd_display_port@a,3
  1834  01D5  29D7               	goto	u331
  1835  01D6  29D8               	goto	u330
  1836  01D7                     u331:	
  1837  01D7  29DA               	goto	l213
  1838  01D8                     u330:	
  1839  01D8                     l1011:	
  1840                           
  1841                           ;lcd_display.c: 24:   LATA3 = 1;
  1842  01D8  158C               	bsf	12,3	;volatile
  1843  01D9  29DB               	goto	l215
  1844  01DA                     l213:	
  1845                           ;lcd_display.c: 25:  else
  1846                           
  1847                           
  1848                           ;lcd_display.c: 26:   LATA3 = 0;
  1849  01DA  118C               	bcf	12,3	;volatile
  1850  01DB                     l215:	
  1851  01DB  0008               	return
  1852  01DC                     __end_of_lcd_display_port:	
  1853                           
  1854                           	psect	text10
  1855  024D                     __ptext10:	
  1856 ;; *************** function _init *****************
  1857 ;; Defined at:
  1858 ;;		line 10 in file "init.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    4
  1879 ;; This function calls:
  1880 ;;		_init_i2c
  1881 ;;		_init_interrupt
  1882 ;;		_init_oscillator
  1883 ;;		_init_ports
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function _init
  1891  024D                     _init:	
  1892  024D                     l899:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1895                           
  1896                           
  1897                           ;init.c: 12:     init_oscillator();
  1898  024D  3182  228C  3182   	fcall	_init_oscillator
  1899  0250                     l901:	
  1900                           
  1901                           ;init.c: 13:     init_ports();
  1902  0250  3182  2285  3182   	fcall	_init_ports
  1903  0253                     l903:	
  1904                           
  1905                           ;init.c: 14:     init_i2c();
  1906  0253  3182  2229  3182   	fcall	_init_i2c
  1907  0256                     l905:	
  1908                           
  1909                           ;init.c: 15:     init_interrupt();
  1910  0256  3182  2293  3182   	fcall	_init_interrupt
  1911  0259                     l103:	
  1912  0259  0008               	return
  1913  025A                     __end_of_init:	
  1914                           
  1915                           	psect	text11
  1916  0285                     __ptext11:	
  1917 ;; *************** function _init_ports *****************
  1918 ;; Defined at:
  1919 ;;		line 26 in file "init.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		_res_ports
  1942 ;;		_set_ports
  1943 ;; This function is called by:
  1944 ;;		_init
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _init_ports
  1950  0285                     _init_ports:	
  1951  0285                     l875:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _init_ports: [status,2+status,0+pclath+cstack]
  1954                           
  1955                           
  1956                           ;init.c: 28:     res_ports ();
  1957  0285  3182  223D  3182   	fcall	_res_ports
  1958                           
  1959                           ;init.c: 29:     set_ports ();
  1960  0288  3182  2298  3182   	fcall	_set_ports
  1961  028B                     l109:	
  1962  028B  0008               	return
  1963  028C                     __end_of_init_ports:	
  1964                           
  1965                           	psect	text12
  1966  0298                     __ptext12:	
  1967 ;; *************** function _set_ports *****************
  1968 ;; Defined at:
  1969 ;;		line 52 in file "init.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		None
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    2
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_init_ports
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _set_ports
  1999  0298                     _set_ports:	
  2000  0298                     l115:	
  2001                           ;incstack = 0
  2002                           ; Regs used in _set_ports: []
  2003                           
  2004  0298  0008               	return
  2005  0299                     __end_of_set_ports:	
  2006                           
  2007                           	psect	text13
  2008  023D                     __ptext13:	
  2009 ;; *************** function _res_ports *****************
  2010 ;; Defined at:
  2011 ;;		line 31 in file "init.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		status,2
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    2
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_init_ports
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _res_ports
  2041  023D                     _res_ports:	
  2042  023D                     l839:	
  2043                           ;incstack = 0
  2044                           ; Regs used in _res_ports: [status,2]
  2045                           
  2046                           
  2047                           ;init.c: 34:     TRISA = 0x00;
  2048  023D  0021               	movlb	1	; select bank1
  2049  023E  018C               	clrf	12	;volatile
  2050                           
  2051                           ;init.c: 35:     TRISB = 0x00;
  2052  023F  018D               	clrf	13	;volatile
  2053                           
  2054                           ;init.c: 36:     TRISC = 0x00;
  2055  0240  018E               	clrf	14	;volatile
  2056                           
  2057                           ;init.c: 37:     TRISD = 0x00;
  2058  0241  018F               	clrf	15	;volatile
  2059                           
  2060                           ;init.c: 40:     LATA = 0x00;
  2061  0242  0022               	movlb	2	; select bank2
  2062  0243  018C               	clrf	12	;volatile
  2063                           
  2064                           ;init.c: 41:     LATB = 0x00;
  2065  0244  018D               	clrf	13	;volatile
  2066                           
  2067                           ;init.c: 42:     LATC = 0x00;
  2068  0245  018E               	clrf	14	;volatile
  2069                           
  2070                           ;init.c: 43:     LATD = 0x00;
  2071  0246  018F               	clrf	15	;volatile
  2072                           
  2073                           ;init.c: 46:     ANSELA = 0x00;
  2074  0247  0023               	movlb	3	; select bank3
  2075  0248  018C               	clrf	12	;volatile
  2076                           
  2077                           ;init.c: 47:     ANSELB = 0x00;
  2078  0249  018D               	clrf	13	;volatile
  2079                           
  2080                           ;init.c: 48:     ANSELC = 0x00;
  2081  024A  018E               	clrf	14	;volatile
  2082                           
  2083                           ;init.c: 49:     ANSELD = 0x00;
  2084  024B  018F               	clrf	15	;volatile
  2085  024C                     l112:	
  2086  024C  0008               	return
  2087  024D                     __end_of_res_ports:	
  2088                           
  2089                           	psect	text14
  2090  028C                     __ptext14:	
  2091 ;; *************** function _init_oscillator *****************
  2092 ;; Defined at:
  2093 ;;		line 18 in file "init.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_init
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _init_oscillator
  2123  028C                     _init_oscillator:	
  2124  028C                     l871:	
  2125                           ;incstack = 0
  2126                           ; Regs used in _init_oscillator: [wreg+status,2+status,0]
  2127                           
  2128                           
  2129                           ;init.c: 20:     OSCCONbits.SCS1 = 1;
  2130  028C  0021               	movlb	1	; select bank1
  2131  028D  1499               	bsf	25,1	;volatile
  2132  028E                     l873:	
  2133                           
  2134                           ;init.c: 21:     OSCCONbits.IRCF = 0b1110;
  2135  028E  0819               	movf	25,w	;volatile
  2136  028F  3987               	andlw	-121
  2137  0290  3870               	iorlw	112
  2138  0291  0099               	movwf	25	;volatile
  2139  0292                     l106:	
  2140  0292  0008               	return
  2141  0293                     __end_of_init_oscillator:	
  2142                           
  2143                           	psect	text15
  2144  0293                     __ptext15:	
  2145 ;; *************** function _init_interrupt *****************
  2146 ;; Defined at:
  2147 ;;		line 93 in file "init.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    3
  2168 ;; This function calls:
  2169 ;;		_init_interrupt_timer
  2170 ;; This function is called by:
  2171 ;;		_init
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function _init_interrupt
  2177  0293                     _init_interrupt:	
  2178  0293                     l895:	
  2179                           ;incstack = 0
  2180                           ; Regs used in _init_interrupt: [wreg+status,2+status,0+pclath+cstack]
  2181                           
  2182                           
  2183                           ;init.c: 95:     init_interrupt_timer ();
  2184  0293  3182  2266  3182   	fcall	_init_interrupt_timer
  2185  0296                     l897:	
  2186                           
  2187                           ;init.c: 98:     INTCONbits.GIE = 1;
  2188  0296  178B               	bsf	11,7	;volatile
  2189  0297                     l121:	
  2190  0297  0008               	return
  2191  0298                     __end_of_init_interrupt:	
  2192                           
  2193                           	psect	text16
  2194  0266                     __ptext16:	
  2195 ;; *************** function _init_interrupt_timer *****************
  2196 ;; Defined at:
  2197 ;;		line 102 in file "init.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    2
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_init_interrupt
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _init_interrupt_timer
  2227  0266                     _init_interrupt_timer:	
  2228  0266                     l841:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _init_interrupt_timer: [wreg+status,2+status,0]
  2231                           
  2232                           
  2233                           ;init.c: 105:     OPTION_REGbits.PSA = 0;
  2234  0266  0021               	movlb	1	; select bank1
  2235  0267  1195               	bcf	21,3	;volatile
  2236  0268                     l843:	
  2237                           
  2238                           ;init.c: 107:     OPTION_REGbits.PS = 0b100;
  2239  0268  0815               	movf	21,w	;volatile
  2240  0269  39F8               	andlw	-8
  2241  026A  3804               	iorlw	4
  2242  026B  0095               	movwf	21	;volatile
  2243  026C                     l845:	
  2244                           
  2245                           ;init.c: 110:     OPTION_REGbits.TMR0CS = 0;
  2246  026C  1295               	bcf	21,5	;volatile
  2247  026D                     l847:	
  2248                           
  2249                           ;init.c: 113:     OPTION_REGbits.TMR0SE = 0;
  2250  026D  1215               	bcf	21,4	;volatile
  2251  026E                     l849:	
  2252                           
  2253                           ;init.c: 117:     T0IE = 1;
  2254  026E  168B               	bsf	11,5	;volatile
  2255  026F                     l851:	
  2256                           
  2257                           ;init.c: 119:     TMR0 = 0;
  2258  026F  0020               	movlb	0	; select bank0
  2259  0270  0195               	clrf	21	;volatile
  2260  0271                     l124:	
  2261  0271  0008               	return
  2262  0272                     __end_of_init_interrupt_timer:	
  2263                           
  2264                           	psect	text17
  2265  0229                     __ptext17:	
  2266 ;; *************** function _init_i2c *****************
  2267 ;; Defined at:
  2268 ;;		line 57 in file "init.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    2
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_init
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _init_i2c
  2298  0229                     _init_i2c:	
  2299  0229                     l877:	
  2300                           ;incstack = 0
  2301                           ; Regs used in _init_i2c: [wreg+status,2]
  2302                           
  2303                           
  2304                           ;init.c: 60:     TRISCbits.TRISC3 = 1;
  2305  0229  0021               	movlb	1	; select bank1
  2306  022A  158E               	bsf	14,3	;volatile
  2307                           
  2308                           ;init.c: 61:     TRISCbits.TRISC4 = 1;
  2309  022B  160E               	bsf	14,4	;volatile
  2310  022C                     l879:	
  2311                           
  2312                           ;init.c: 66:     SSPCON1 = 0b00110110;
  2313  022C  3036               	movlw	54
  2314  022D  0024               	movlb	4	; select bank4
  2315  022E  0095               	movwf	21	;volatile
  2316                           
  2317                           ;init.c: 69:     SSPCON2 = 0x01;
  2318  022F  3001               	movlw	1
  2319  0230  0096               	movwf	22	;volatile
  2320  0231                     l881:	
  2321                           
  2322                           ;init.c: 72:     SSPCON3 = 0x00;
  2323  0231  0197               	clrf	23	;volatile
  2324  0232                     l883:	
  2325                           
  2326                           ;init.c: 75:     SSPADD = 0x30;
  2327  0232  3030               	movlw	48
  2328  0233  0092               	movwf	18	;volatile
  2329  0234                     l885:	
  2330                           
  2331                           ;init.c: 78:     SSPSTAT = 0x80;
  2332  0234  3080               	movlw	128
  2333  0235  0094               	movwf	20	;volatile
  2334  0236                     l887:	
  2335                           
  2336                           ;init.c: 81:     INTCONbits.GIE = 1;
  2337  0236  178B               	bsf	11,7	;volatile
  2338  0237                     l889:	
  2339                           
  2340                           ;init.c: 84:     INTCONbits.PEIE = 1;
  2341  0237  170B               	bsf	11,6	;volatile
  2342  0238                     l891:	
  2343                           
  2344                           ;init.c: 87:     SSPIF = 0;
  2345  0238  0020               	movlb	0	; select bank0
  2346  0239  1191               	bcf	17,3	;volatile
  2347  023A                     l893:	
  2348                           
  2349                           ;init.c: 89:     SSPIE = 1;
  2350  023A  0021               	movlb	1	; select bank1
  2351  023B  1591               	bsf	17,3	;volatile
  2352  023C                     l118:	
  2353  023C  0008               	return
  2354  023D                     __end_of_init_i2c:	
  2355                           
  2356                           	psect	intentry
  2357  0004                     __pintentry:	
  2358 ;; *************** function _interruptHandler *****************
  2359 ;; Defined at:
  2360 ;;		line 7 in file "interrupt.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		_on_interrupt_i2c
  2383 ;;		_on_interrupt_timer_0
  2384 ;; This function is called by:
  2385 ;;		Interrupt level 1
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389  0004                     _interruptHandler:	
  2390                           
  2391                           ;incstack = 0
  2392  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2393                           
  2394                           ; Regs used in _interruptHandler: [wreg+status,2+status,0+pclath+cstack]
  2395  0005  3180               	pagesel	$
  2396  0006                     i1l1155:	
  2397                           
  2398                           ;interrupt.c: 10:     if (SSPIE && SSPIF){
  2399  0006  0021               	movlb	1	; select bank1
  2400  0007  1D91               	btfss	17,3	;volatile
  2401  0008  280A               	goto	u55_21
  2402  0009  280B               	goto	u55_20
  2403  000A                     u55_21:	
  2404  000A  2813               	goto	i1l1161
  2405  000B                     u55_20:	
  2406  000B                     i1l1157:	
  2407  000B  0020               	movlb	0	; select bank0
  2408  000C  1D91               	btfss	17,3	;volatile
  2409  000D  280F               	goto	u56_21
  2410  000E  2810               	goto	u56_20
  2411  000F                     u56_21:	
  2412  000F  2813               	goto	i1l1161
  2413  0010                     u56_20:	
  2414  0010                     i1l1159:	
  2415                           
  2416                           ;interrupt.c: 11:         on_interrupt_i2c ();
  2417  0010  3180  202E  3180   	fcall	_on_interrupt_i2c
  2418  0013                     i1l1161:	
  2419                           
  2420                           ;interrupt.c: 15:     if (T0IE && T0IF){
  2421  0013  1E8B               	btfss	11,5	;volatile
  2422  0014  2816               	goto	u57_21
  2423  0015  2817               	goto	u57_20
  2424  0016                     u57_21:	
  2425  0016  281F               	goto	i1l161
  2426  0017                     u57_20:	
  2427  0017                     i1l1163:	
  2428  0017  1D0B               	btfss	11,2	;volatile
  2429  0018  281A               	goto	u58_21
  2430  0019  281B               	goto	u58_20
  2431  001A                     u58_21:	
  2432  001A  281F               	goto	i1l161
  2433  001B                     u58_20:	
  2434  001B                     i1l1165:	
  2435                           
  2436                           ;interrupt.c: 16:         on_interrupt_timer_0();
  2437  001B  3182  2299  3180   	fcall	_on_interrupt_timer_0
  2438  001E                     i1l1167:	
  2439                           
  2440                           ;interrupt.c: 17:         T0IF = 0;
  2441  001E  110B               	bcf	11,2	;volatile
  2442  001F                     i1l161:	
  2443  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2444  0020  0009               	retfie
  2445  0021                     __end_of_interruptHandler:	
  2446                           
  2447                           	psect	text19
  2448  0299                     __ptext19:	
  2449 ;; *************** function _on_interrupt_timer_0 *****************
  2450 ;; Defined at:
  2451 ;;		line 74 in file "interrupt.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		None
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_interruptHandler
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _on_interrupt_timer_0
  2480  0299                     _on_interrupt_timer_0:	
  2481  0299                     i1l190:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _on_interrupt_timer_0: []
  2484                           
  2485  0299  0008               	return
  2486  029A                     __end_of_on_interrupt_timer_0:	
  2487                           
  2488                           	psect	text20
  2489  002E                     __ptext20:	
  2490 ;; *************** function _on_interrupt_i2c *****************
  2491 ;; Defined at:
  2492 ;;		line 24 in file "interrupt.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;Total ram usage:        1 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_interruptHandler
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _on_interrupt_i2c
  2521  002E                     _on_interrupt_i2c:	
  2522  002E                     i1l1107:	
  2523                           ;incstack = 0
  2524                           ; Regs used in _on_interrupt_i2c: [wreg+status,2+status,0]
  2525                           
  2526                           
  2527                           ;interrupt.c: 26:     SSPIF = 0;
  2528  002E  0020               	movlb	0	; select bank0
  2529  002F  1191               	bcf	17,3	;volatile
  2530  0030                     i1l1109:	
  2531                           
  2532                           ;interrupt.c: 27:     LATCbits.LATC7 ^= 1;
  2533  0030  0022               	movlb	2	; select bank2
  2534  0031  0D0E               	rlf	14,w	;volatile
  2535  0032  0D0E               	rlf	14,w	;volatile
  2536  0033  3901               	andlw	1
  2537  0034  00F0               	movwf	??_on_interrupt_i2c
  2538  0035  3001               	movlw	1
  2539  0036  06F0               	xorwf	??_on_interrupt_i2c,f
  2540  0037  0CF0               	rrf	??_on_interrupt_i2c,f
  2541  0038  0CF0               	rrf	??_on_interrupt_i2c,f
  2542  0039  080E               	movf	14,w	;volatile
  2543  003A  0670               	xorwf	??_on_interrupt_i2c,w
  2544  003B  397F               	andlw	-129
  2545  003C  0670               	xorwf	??_on_interrupt_i2c,w
  2546  003D  008E               	movwf	14	;volatile
  2547  003E                     i1l1111:	
  2548                           
  2549                           ;interrupt.c: 29:     CKP = 0;
  2550  003E  0024               	movlb	4	; select bank4
  2551  003F  1215               	bcf	21,4	;volatile
  2552  0040                     i1l1113:	
  2553                           
  2554                           ;interrupt.c: 32:     if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
  2555  0040  1B15               	btfsc	21,6	;volatile
  2556  0041  2843               	goto	u41_21
  2557  0042  2844               	goto	u41_20
  2558  0043                     u41_21:	
  2559  0043  2848               	goto	i1l1117
  2560  0044                     u41_20:	
  2561  0044                     i1l1115:	
  2562  0044  1F95               	btfss	21,7	;volatile
  2563  0045  2847               	goto	u42_21
  2564  0046  2848               	goto	u42_20
  2565  0047                     u42_21:	
  2566  0047  284F               	goto	i1l1125
  2567  0048                     u42_20:	
  2568  0048                     i1l1117:	
  2569                           
  2570                           ;interrupt.c: 33:     {;interrupt.c: 34:       d = SSPBUF;
  2571  0048  0811               	movf	17,w	;volatile
  2572  0049  00F0               	movwf	??_on_interrupt_i2c
  2573  004A  0870               	movf	??_on_interrupt_i2c,w
  2574  004B  00FC               	movwf	_d
  2575  004C                     i1l1119:	
  2576                           
  2577                           ;interrupt.c: 35:       SSPCONbits.SSPOV = 0;
  2578  004C  1315               	bcf	21,6	;volatile
  2579  004D                     i1l1121:	
  2580                           
  2581                           ;interrupt.c: 36:       SSPCONbits.WCOL = 0;
  2582  004D  1395               	bcf	21,7	;volatile
  2583  004E                     i1l1123:	
  2584                           
  2585                           ;interrupt.c: 37:       SSPCONbits.CKP = 1;
  2586  004E  1615               	bsf	21,4	;volatile
  2587  004F                     i1l1125:	
  2588                           
  2589                           ;interrupt.c: 41:     if(!D_nA && !R_nW)
  2590  004F  1A94               	btfsc	20,5	;volatile
  2591  0050  2852               	goto	u43_21
  2592  0051  2853               	goto	u43_20
  2593  0052                     u43_21:	
  2594  0052  285F               	goto	i1l171
  2595  0053                     u43_20:	
  2596  0053                     i1l1127:	
  2597  0053  1914               	btfsc	20,2	;volatile
  2598  0054  2856               	goto	u44_21
  2599  0055  2857               	goto	u44_20
  2600  0056                     u44_21:	
  2601  0056  285F               	goto	i1l171
  2602  0057                     u44_20:	
  2603  0057                     i1l1129:	
  2604                           
  2605                           ;interrupt.c: 42:     {;interrupt.c: 43:         d = SSPBUF;
  2606  0057  0811               	movf	17,w	;volatile
  2607  0058  00F0               	movwf	??_on_interrupt_i2c
  2608  0059  0870               	movf	??_on_interrupt_i2c,w
  2609  005A  00FC               	movwf	_d
  2610  005B                     i1l172:	
  2611                           ;interrupt.c: 44:         while(BF);
  2612                           
  2613  005B  1814               	btfsc	20,0	;volatile
  2614  005C  285E               	goto	u45_21
  2615  005D  285F               	goto	u45_20
  2616  005E                     u45_21:	
  2617  005E  285B               	goto	i1l172
  2618  005F                     u45_20:	
  2619  005F                     i1l171:	
  2620                           ;interrupt.c: 45:     }
  2621                           
  2622                           
  2623                           ;interrupt.c: 46:     if (D_nA && !R_nW)
  2624  005F  1E94               	btfss	20,5	;volatile
  2625  0060  2862               	goto	u46_21
  2626  0061  2863               	goto	u46_20
  2627  0062                     u46_21:	
  2628  0062  286F               	goto	i1l175
  2629  0063                     u46_20:	
  2630  0063                     i1l1131:	
  2631  0063  1914               	btfsc	20,2	;volatile
  2632  0064  2866               	goto	u47_21
  2633  0065  2867               	goto	u47_20
  2634  0066                     u47_21:	
  2635  0066  286F               	goto	i1l175
  2636  0067                     u47_20:	
  2637  0067                     i1l1133:	
  2638                           
  2639                           ;interrupt.c: 47:     {;interrupt.c: 48:         i2c_data = SSPBUF;
  2640  0067  0811               	movf	17,w	;volatile
  2641  0068  00F0               	movwf	??_on_interrupt_i2c
  2642  0069  0870               	movf	??_on_interrupt_i2c,w
  2643  006A  00FB               	movwf	_i2c_data
  2644  006B                     i1l176:	
  2645                           ;interrupt.c: 49:         while(BF);
  2646                           
  2647  006B  1814               	btfsc	20,0	;volatile
  2648  006C  286E               	goto	u48_21
  2649  006D  286F               	goto	u48_20
  2650  006E                     u48_21:	
  2651  006E  286B               	goto	i1l176
  2652  006F                     u48_20:	
  2653  006F                     i1l175:	
  2654                           ;interrupt.c: 50:     }
  2655                           
  2656                           
  2657                           ;interrupt.c: 53:     if(!D_nA && R_nW)
  2658  006F  1A94               	btfsc	20,5	;volatile
  2659  0070  2872               	goto	u49_21
  2660  0071  2873               	goto	u49_20
  2661  0072                     u49_21:	
  2662  0072  2882               	goto	i1l179
  2663  0073                     u49_20:	
  2664  0073                     i1l1135:	
  2665  0073  1D14               	btfss	20,2	;volatile
  2666  0074  2876               	goto	u50_21
  2667  0075  2877               	goto	u50_20
  2668  0076                     u50_21:	
  2669  0076  2882               	goto	i1l179
  2670  0077                     u50_20:	
  2671  0077                     i1l1137:	
  2672                           
  2673                           ;interrupt.c: 54:     {;interrupt.c: 55:         d = SSPBUF;
  2674  0077  0811               	movf	17,w	;volatile
  2675  0078  00F0               	movwf	??_on_interrupt_i2c
  2676  0079  0870               	movf	??_on_interrupt_i2c,w
  2677  007A  00FC               	movwf	_d
  2678  007B                     i1l1139:	
  2679                           
  2680                           ;interrupt.c: 56:         BF = 0;
  2681  007B  1014               	bcf	20,0	;volatile
  2682                           
  2683                           ;interrupt.c: 57:         SSPBUF = 0x54;
  2684  007C  3054               	movlw	84
  2685  007D  0091               	movwf	17	;volatile
  2686  007E                     i1l180:	
  2687                           ;interrupt.c: 58:         while(BF);
  2688                           
  2689  007E  1814               	btfsc	20,0	;volatile
  2690  007F  2881               	goto	u51_21
  2691  0080  2882               	goto	u51_20
  2692  0081                     u51_21:	
  2693  0081  287E               	goto	i1l180
  2694  0082                     u51_20:	
  2695  0082                     i1l179:	
  2696                           ;interrupt.c: 59:     }
  2697                           
  2698                           
  2699                           ;interrupt.c: 60:     if (D_nA && R_nW)
  2700  0082  1E94               	btfss	20,5	;volatile
  2701  0083  2885               	goto	u52_21
  2702  0084  2886               	goto	u52_20
  2703  0085                     u52_21:	
  2704  0085  2892               	goto	i1l183
  2705  0086                     u52_20:	
  2706  0086                     i1l1141:	
  2707  0086  1D14               	btfss	20,2	;volatile
  2708  0087  2889               	goto	u53_21
  2709  0088  288A               	goto	u53_20
  2710  0089                     u53_21:	
  2711  0089  2892               	goto	i1l183
  2712  008A                     u53_20:	
  2713  008A                     i1l1143:	
  2714                           
  2715                           ;interrupt.c: 61:     {;interrupt.c: 62:         i2c_data = SSPBUF;
  2716  008A  0811               	movf	17,w	;volatile
  2717  008B  00F0               	movwf	??_on_interrupt_i2c
  2718  008C  0870               	movf	??_on_interrupt_i2c,w
  2719  008D  00FB               	movwf	_i2c_data
  2720  008E                     i1l184:	
  2721                           ;interrupt.c: 63:         while(!BF);
  2722                           
  2723  008E  1C14               	btfss	20,0	;volatile
  2724  008F  2891               	goto	u54_21
  2725  0090  2892               	goto	u54_20
  2726  0091                     u54_21:	
  2727  0091  288E               	goto	i1l184
  2728  0092                     u54_20:	
  2729  0092                     i1l183:	
  2730                           ;interrupt.c: 64:     }
  2731                           
  2732                           
  2733                           ;interrupt.c: 66:     CKP = 1;
  2734  0092  1615               	bsf	21,4	;volatile
  2735  0093                     i1l1145:	
  2736                           
  2737                           ;interrupt.c: 69:     I2C_VARS.d = d;
  2738  0093  087C               	movf	_d,w
  2739  0094  00F0               	movwf	??_on_interrupt_i2c
  2740  0095  0870               	movf	??_on_interrupt_i2c,w
  2741  0096  0020               	movlb	0	; select bank0
  2742  0097  00A0               	movwf	_I2C_VARS	;volatile
  2743                           
  2744                           ;interrupt.c: 70:     I2C_VARS.data = i2c_data;
  2745  0098  087B               	movf	_i2c_data,w
  2746  0099  00F0               	movwf	??_on_interrupt_i2c
  2747  009A  0870               	movf	??_on_interrupt_i2c,w
  2748  009B  00A1               	movwf	_I2C_VARS+1	;volatile
  2749  009C                     i1l1147:	
  2750                           
  2751                           ;interrupt.c: 71:     INT_FLAGS.update_lcd_display = 1;
  2752  009C  1423               	bsf	_INT_FLAGS,0	;volatile
  2753  009D                     i1l187:	
  2754  009D  0008               	return
  2755  009E                     __end_of_on_interrupt_i2c:	
  2756  007E                     btemp	set	126	;btemp
  2757  007E                     int$flags	set	126
  2758  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         6
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      3       7
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    lcd_display_write_string@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_lcd_display_set_cursor
    _main->_lcd_display_write_string
    _update_display->_lcd_display_set_cursor
    _lcd_display_set_cursor->_lcd_display_cmd
    _lcd_display_clear->_lcd_display_cmd
    _lcd_display_write_string->_lcd_display_write_char
    _lcd_display_write_char->_lcd_display_port
    _lcd_display_init->_lcd_display_cmd
    _lcd_display_cmd->_lcd_display_port

Critical Paths under _interruptHandler in COMMON

    _interruptHandler->_on_interrupt_i2c

Critical Paths under _main in BANK0

    _update_if_flag_set->_update_display

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3126
                               _init
                  _lcd_display_clear
                   _lcd_display_init
             _lcd_display_set_cursor
           _lcd_display_write_string
                 _update_if_flag_set
 ---------------------------------------------------------------------------------
 (1) _update_if_flag_set                                   0     0      0    1486
                     _update_display
 ---------------------------------------------------------------------------------
 (2) _update_display                                       3     3      0    1486
                                              0 BANK0      3     3      0
                  _lcd_display_clear
             _lcd_display_set_cursor
             _lcd_display_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_display_set_cursor                               7     6      1     988
                                              4 COMMON     7     6      1
                    _lcd_display_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_display_clear                                    0     0      0     110
                    _lcd_display_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_display_write_string                             5     3      2     344
                                              6 COMMON     5     3      2
             _lcd_display_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_display_write_char                               4     4      0     178
                                              2 COMMON     4     4      0
                   _lcd_display_port
 ---------------------------------------------------------------------------------
 (1) _lcd_display_init                                     1     1      0     198
                                              4 COMMON     1     1      0
                    _lcd_display_cmd
                   _lcd_display_port
 ---------------------------------------------------------------------------------
 (4) _lcd_display_cmd                                      2     2      0     110
                                              2 COMMON     2     2      0
                   _lcd_display_port
 ---------------------------------------------------------------------------------
 (4) _lcd_display_port                                     1     1      0      88
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                           _init_i2c
                     _init_interrupt
                    _init_oscillator
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
                          _res_ports
                          _set_ports
 ---------------------------------------------------------------------------------
 (3) _set_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _res_ports                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_oscillator                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
               _init_interrupt_timer
 ---------------------------------------------------------------------------------
 (3) _init_interrupt_timer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interruptHandler                                     0     0      0       0
                   _on_interrupt_i2c
               _on_interrupt_timer_0
 ---------------------------------------------------------------------------------
 (7) _on_interrupt_timer_0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _on_interrupt_i2c                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_i2c
     _init_interrupt
       _init_interrupt_timer
     _init_oscillator
     _init_ports
       _res_ports
       _set_ports
   _lcd_display_clear
     _lcd_display_cmd
       _lcd_display_port
   _lcd_display_init
     _lcd_display_cmd
       _lcd_display_port
     _lcd_display_port
   _lcd_display_set_cursor
     _lcd_display_cmd
       _lcd_display_port
   _lcd_display_write_string
     _lcd_display_write_char
       _lcd_display_port
   _update_if_flag_set
     _update_display
       _lcd_display_clear
         _lcd_display_cmd
           _lcd_display_port
       _lcd_display_set_cursor
         _lcd_display_cmd
           _lcd_display_port
       _lcd_display_write_char
         _lcd_display_port

 _interruptHandler (ROOT)
   _on_interrupt_i2c
   _on_interrupt_timer_0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       7       5        8.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      14      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      14      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 09 14:31:29 2020

                                _d 007C                        __CFG_CP$OFF 0000  
                 ??_init_interrupt 0071                                 _BF 10A0  
                               l33 027B                                 l36 0106  
                   _update_display 009E                                l103 0259  
                              l112 024C                                l121 0297  
                              l106 0292                                l115 0298  
                              l211 01D3                                l124 0271  
                              l109 028B                                l213 01DA  
                              l221 0284                                l118 023C  
                              l230 018F                                l215 01DB  
                              l207 01C4                                l209 01CC  
                              l233 01BB                                l218 0228  
                              l227 014C                                l239 01F8  
                              l901 0250                                l903 0253  
                              l841 0266                                l905 0256  
                              l851 026F                                l843 0268  
                              l845 026C                                l847 026D  
                              l871 028C                                l839 023D  
                              l881 0231                                l849 026E  
                              l873 028E                                l891 0238  
                              l883 0232                                l875 0285  
                              l893 023A                                l885 0234  
                              l877 0229                                l887 0236  
                              l879 022C                                l895 0293  
                              l889 0237                                l897 0296  
                              _CKP 10AC                                l899 024D  
                              l997 01BD                                l999 01C1  
                              u300 01C1                                u301 01C0  
                              u310 01CA                                u311 01C9  
                              u320 01D1                                u321 01D0  
                              u330 01D8                                u331 01D7  
                              u340 010D                                u341 010C  
                              u360 0130                                u361 012F  
                              u355 0115                                u390 01F8  
                              u607 01AA                                u391 01F7  
                              u375 0138                                u617 01B6  
                              u385 01A0                                u627 0154  
                              u637 015F                                u590 0277  
                              u647 016A                                u591 0276  
                              u657 0221                       __CFG_BORV$LO 0000  
                              wreg 0009                       __CFG_IESO$ON 0000  
                     __CFG_LVP$OFF 0000                               l1001 01C6  
                             l1011 01D8                               l1003 01CA  
                             l1005 01CD                               l1021 0226  
                             l1013 0216                               l1007 01D1  
                             l1015 0218                               l1023 027C  
                             l1031 0121                               l1009 01D4  
                             l1017 021C                               l1041 0144  
                             l1033 0125                               l1025 0108  
                             l1201 020F                               l1019 021E  
                             l1051 01A7                               l1043 0148  
                             l1027 010D                               l1035 012A  
                             l1061 01B5                               l1053 01A9  
                             l1045 0191                               l1037 0130  
                             l1029 011C                               l1063 01B9  
                             l1055 01AD                               l1047 019B  
                             l1039 013F                               l1057 01AF  
                             l1049 019D                               l1091 0167  
                             l1083 014D                               l1059 01B3  
                             l1085 0151                               l1093 01DC  
                             l1181 00AD                               l1173 009E  
                             l1087 0158                               l1095 01DF  
                             l1183 00B2                               l1175 00A3  
                             l1191 0272                               l1089 0163  
                             l1097 01E9                               l1185 00BB  
                             l1177 00A4                               l1193 0277  
                             l1099 01ED                               l1187 00C0  
                             l1179 00A7                               l1195 0278  
                             l1189 00C5                               l1197 01F9  
                             l1199 0208                               STR_1 025A  
                             _T0IE 005D                               _T0IF 005A  
                             _LATA 010C                               _LATB 010D  
                             _LATC 010E                               _LATD 010F  
                             _TMR0 0015                               _D_nA 10A5  
         ??_lcd_display_write_char 0072                               _R_nW 10A2  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 01F9           __end_of_interruptHandler 0021  
                             _init 024D                               fsr0h 0005  
                             indf0 0000                               fsr0l 0004  
                             btemp 007E                  ??_init_oscillator 0071  
                    __CFG_BOREN$ON 0000      __size_of_init_interrupt_timer 000C  
                             start 0021                      __CFG_MCLRE$ON 0000  
        __size_of_lcd_display_init 0043          __size_of_lcd_display_port 0020  
           __end_of_update_display 0107                              ?_main 0070  
                            ?_init 0070                      __CFG_WDTE$OFF 0000  
                            _LATA0 0860                              _LATA1 0861  
                            _LATA2 0862                              _LATB0 0868  
                            _LATA3 0863                              _LATB1 0869  
                            i1l161 001F                              i1l171 005F  
                            i1l180 007E                              i1l172 005B  
                            i1l190 0299                              i1l183 0092  
                            i1l175 006F                              i1l184 008E  
                            i1l176 006B                              i1l187 009D  
                            i1l179 0082                              u41_20 0044  
                            u41_21 0043                              u50_20 0077  
                            u42_20 0048                              u50_21 0076  
                            u42_21 0047                              u51_20 0082  
                            u43_20 0053                              u51_21 0081  
                            u43_21 0052                              u52_20 0086  
                            u44_20 0057                              u52_21 0085  
                            u44_21 0056                              u53_20 008A  
                            u45_20 005F                              u53_21 0089  
                            u45_21 005E                              u54_20 0092  
                            u46_20 0063                              u54_21 0091  
                            u46_21 0062                              u47_20 0067  
                            u55_20 000B                              u47_21 0066  
                            u55_21 000A                              u48_20 006F  
                            u56_20 0010                              u48_21 006E  
                            u56_21 000F                              u49_20 0073  
                            u57_20 0017                              u49_21 0072  
                            u57_21 0016                              _TRISA 008C  
                            _TRISB 008D                              _TRISC 008E  
                            _TRISD 008F                              _SSPIE 048B  
                            u58_20 001B                              _SSPIF 008B  
                            u58_21 001A    __size_of_lcd_display_set_cursor 0046  
        __size_of_on_interrupt_i2c 0070                              status 0003  
                            wtemp0 007E               _on_interrupt_timer_0 0299  
                  __initialization 0023                       __end_of_main 0215  
                     __end_of_init 025A           _lcd_display_write_string 01DC  
                  ?_update_display 0070                    update_display@s 0025  
                   __CFG_LPBOR$OFF 0000                             ??_main 007B  
                           ??_init 0071                             _ANSELA 018C  
                           _ANSELB 018D                             _ANSELC 018E  
                           _ANSELD 018F                             i1l1111 003E  
                           i1l1121 004D                             i1l1113 0040  
                           i1l1131 0063                             i1l1123 004E  
                           i1l1115 0044                             i1l1107 002E  
                           i1l1141 0086                             i1l1133 0067  
                           i1l1125 004F                             i1l1117 0048  
                           i1l1109 0030                             i1l1143 008A  
                           i1l1135 0073                             i1l1127 0053  
                           i1l1119 004C                             i1l1145 0093  
                           i1l1137 0077                             i1l1129 0057  
                           i1l1161 0013                             i1l1147 009C  
                           i1l1139 007B                             i1l1163 0017  
                           i1l1155 0006                             i1l1165 001B  
                           i1l1157 000B                             i1l1167 001E  
                           i1l1159 0010    __size_of_lcd_display_write_char 002C  
                           _SSPADD 0212                             _SSPBUF 0211  
            ?_on_interrupt_timer_0 0070                     __CFG_PWRTE$OFF 0000  
           _lcd_display_set_cursor 0107                 _update_if_flag_set 0272  
                   __CFG_STVREN$ON 0000                   __end_of_init_i2c 023D  
              ?_update_if_flag_set 0070           __size_of_lcd_display_cmd 0014  
          __end_of__initialization 002A               ??_update_if_flag_set 007B  
                 _lcd_display_init 014D                     __pcstackCOMMON 0070  
                 _lcd_display_port 01BC         lcd_display_write_char@temp 0073  
           _lcd_display_write_char 0190                     _OPTION_REGbits 0095  
                  _init_oscillator 028C                         __pbssBANK0 0020  
                 _on_interrupt_i2c 002E                    __CFG_VCAPEN$OFF 0000  
           ??_on_interrupt_timer_0 0070                  ?_interruptHandler 0070  
               ??_interruptHandler 0071                         __pmaintext 01F9  
                       __pintentry 0004                 __size_of_res_ports 0010  
     __end_of_init_interrupt_timer 0272                 __size_of_set_ports 0001  
          lcd_display_set_cursor@a 0077            lcd_display_set_cursor@b 0074  
          lcd_display_set_cursor@y 0079            lcd_display_set_cursor@z 0078  
                          _SSPCON1 0215                            _SSPCON2 0216  
                          _SSPCON3 0217                            _SSPSTAT 0214  
                        ?_init_i2c 0070         ??_lcd_display_write_string 0078  
                ??_lcd_display_cmd 0072                   ??_update_display 0024  
                lcd_display_port@a 0071          lcd_display_write_string@a 0076  
        lcd_display_write_string@i 0079            __end_of_init_oscillator 0293  
                       _init_ports 0285                            __ptext1 0272  
                          __ptext2 009E                            __ptext3 0107  
                          __ptext4 027C                            __ptext5 01DC  
                          __ptext6 0190                            __ptext7 014D  
                          __ptext8 0215                            __ptext9 01BC  
                          _display 0022            __size_of_init_interrupt 0005  
             end_of_initialization 002A                         ??_init_i2c 0071  
                __end_of_res_ports 024D                          _INT_FLAGS 0023  
          ?_lcd_display_set_cursor 0074                  __end_of_set_ports 0299  
                 __CFG_FOSC$INTOSC 0000                          _TRISCbits 008E  
         __end_of_lcd_display_init 0190           __end_of_lcd_display_port 01DC  
   __end_of_lcd_display_set_cursor 014D               _init_interrupt_timer 0266  
                _lcd_display_clear 027C            ?_lcd_display_write_char 0070  
               ?_lcd_display_clear 0070                        ?_init_ports 0070  
                 ?_init_oscillator 0070           __end_of_on_interrupt_i2c 009E  
              ??_lcd_display_clear 0074                start_initialization 0023  
 __end_of_lcd_display_write_string 01F9        __size_of_update_if_flag_set 000A  
            ?_init_interrupt_timer 0070          __end_of_lcd_display_clear 0285  
   __end_of_lcd_display_write_char 01BC          __size_of_interruptHandler 001D  
                      __pbssCOMMON 007B                          ___latbits 0003  
                    __pcstackBANK0 0024                     _init_interrupt 0293  
                  _lcd_display_cmd 0215                __size_of_init_ports 0007  
                __size_of_init_i2c 0014      __size_of_on_interrupt_timer_0 0001  
          lcd_display_write_char@a 0075            lcd_display_write_char@y 0074  
                         _I2C_VARS 0020             __end_of_init_interrupt 0298  
                 lcd_display_cmd@a 0073         lcd_display_set_cursor@temp 007A  
           ??_init_interrupt_timer 0071                           _LATCbits 010E  
       __size_of_lcd_display_clear 0009                          _res_ports 023D  
                        _set_ports 0298  __size_of_lcd_display_write_string 001D  
          __end_of_lcd_display_cmd 0229          ?_lcd_display_write_string 0076  
                  ?_init_interrupt 0070                  ?_lcd_display_init 0070  
                ?_lcd_display_port 0070                 ??_lcd_display_init 0074  
               ??_lcd_display_port 0071                           _i2c_data 007B  
                       ?_res_ports 0070                         ?_set_ports 0070  
                     ??_init_ports 0071            __size_of_update_display 0069  
                 _interruptHandler 0004                  ?_on_interrupt_i2c 0070  
               ??_on_interrupt_i2c 0070                           __ptext10 024D  
                         __ptext11 0285                           __ptext20 002E  
                         __ptext12 0298                           __ptext13 023D  
                         __ptext14 028C                           __ptext15 0293  
                         __ptext16 0266                           __ptext17 0229  
                         __ptext19 0299                           _init_i2c 0229  
                    __size_of_main 001C                      __size_of_init 000D  
               __end_of_init_ports 028C                           int$flags 007E  
                 ?_lcd_display_cmd 0070                         _INTCONbits 000B  
         __size_of_init_oscillator 0007                           intlevel1 0000  
       __end_of_update_if_flag_set 027C                  __CFG_CLKOUTEN$OFF 0000  
                       _OSCCONbits 0099                        ??_res_ports 0071  
                      ??_set_ports 0071                      __pstringtext1 025A  
                    __pstringtext2 0000       __end_of_on_interrupt_timer_0 029A  
         ??_lcd_display_set_cursor 0075                         _SSPCONbits 0215  
